{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"braft-utils\"","webpack:///./components/common/DropDown/index.jsx","webpack:///./components/common/Modal/index.jsx","webpack:///external \"draft-js\"","webpack:///external \"braft-finder\"","webpack:///./configs/controls.js","webpack:///./components/common/Switch/index.jsx","webpack:///./components/business/TextIndent/index.jsx","webpack:///./components/business/LetterSpacing/index.jsx","webpack:///./components/business/EmojiPicker/index.jsx","webpack:///./components/business/TextAlign/index.jsx","webpack:///./components/business/FontFamily/index.jsx","webpack:///./components/business/LineHeight/index.jsx","webpack:///./components/business/FontSize/index.jsx","webpack:///./components/common/ColorPicker/index.jsx","webpack:///./components/business/TextColor/index.jsx","webpack:///./configs/maps.js","webpack:///./components/business/Headings/index.jsx","webpack:///./helpers/responsive.js","webpack:///./components/business/LinkEditor/index.jsx","webpack:///./components/business/ControlBar/index.jsx","webpack:///./renderers/decorators/Link/index.jsx","webpack:///./renderers/decorators/index.js","webpack:///./renderers/styles/inlineStyles.js","webpack:///./renderers/styles/blockStyles.js","webpack:///./renderers/atomics/HorizontalLine/index.jsx","webpack:///./renderers/atomics/Embed/index.jsx","webpack:///./renderers/atomics/Audio/index.jsx","webpack:///external \"react-dom\"","webpack:///./renderers/atomics/Video/index.jsx","webpack:///./renderers/atomics/Image/index.jsx","webpack:///external \"immutable\"","webpack:///./renderers/index.js","webpack:///./configs/props.js","webpack:///./configs/keybindings.js","webpack:///./languages/zh-hant.js","webpack:///./languages/zh.js","webpack:///./languages/en.js","webpack:///./languages/index.js","webpack:///./editor/index.jsx","webpack:///./index.jsx"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__29__","__WEBPACK_EXTERNAL_MODULE__32__","webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","installedModules","0","__webpack_require__","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","oe","err","console","error","jsonpArray","oldJsonpFunction","slice","s","_braftUtils","DropDown","alive","responsiveResolveId","dropDownHandlerElement","dropDownContentElement","componentId","_this","props","BaseUtils","UniqueIndex","state","active","offset","React","Component","_this2","this","document","body","addEventListener","event","registerClickEvent","ResponsiveHelper","resolve","fixDropDownPosition","next","disabled","hide","prevState","_this3","removeEventListener","unresolve","_this4","_state","_props","caption","htmlCaption","hoverTitle","showDropDownArrow","arrowActive","className","children","editorHeight","dropDownContentInnerStyle","isNaN","maxHeight","_react2","default","createElement","id","type","title","data-braft-component-id","dangerouslySetInnerHTML","__html","ref","instance","style","marginLeft","viewRect","containerNode","getBoundingClientRect","handlerRect","contentRect","right","width","left","setState","autoHide","target","dataset","braftComponentId","keepActive","Modal","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","handleTransitionEnd","rootElement","classList","contains","ReactDOM","unmountComponentAtNode","parentNode","removeChild","handleCancel","closeOnCancel","close","onCancel","handleConfirm","closeOnConfirm","onConfirm","unrenderComponent","onClose","visible","renderComponent","activeId","clearImmediate","remove","height","confirmable","showFooter","showHeader","showCancel","showConfirm","showClose","cancelText","confirmText","bottomText","language","childComponent","onTransitionEnd","onClick","base","cancel","confirm","querySelector","appendChild","render","setImmediate","add","defaultProps","showModal","hostNode","display","extProps","modalInstance","_extends","destroy","update","lang","controls","undo","text","command","redo","removeStyles","hr","bold","italic","underline","strikeThrough","superScript","subScript","headings","blockQuote","code","unorderedList","orderedList","link","color","lineHeight","letterSpacing","textIndent","fontSize","fontFamily","textAlign","media","emoji","clear","imageControlItems","float-left","data-float","float-right","align-left","data-align","align-center","align-right","size","currentIndent","textIndents","find","item","ContentUtils","selectionHasInlineStyle","editorState","_DropDown2","defaultCaption","map","index","data-size","e","editor","setValue","toggleSelectionIndent","currentTarget","requestFocus","currentLetterSpacing","letterSpacings","toggleSelectionLetterSpacing","emojis","data-emoji","insertText","TextAlign","currentAlignment","undefined","setAlignment","toggleSelectionAlignment","alignment","getSelectionBlockData","textAlignmentTitles","alignLeft","alignCenter","alignRight","alignJustify","textAligns","data-alignment","currentIndex","fontFamilies","data-name","toggleSelectionFontFamily","family","currentLineHeight","lineHeights","toggleSelectionLineHeight","currentFontSize","fontSizes","toggleSelectionFontSize","current","colors","onChange","data-color","replace","TextColor","colorType","dropDownComponentId","switchColorType","toggleColor","toggleSelectionColor","toggleSelectionBackgroundColor","dropDownComponent","captionStyle","currentColor","forEach","color_id","backgroundColor","enableBackgroundColor","data-type","data-keep-active","textColor","_ColorPicker2","disableAlpha","getHeadings","header","normal","blocks","header-one","header-two","header-three","header-four","header-fiv","header-six","unstyled","blockquote","_maps","currentHeadingIndex","findIndex","isActive","resizeEventHandlers","responsiveHelperInited","debouce","eventHandler","filter","clearTimeout","setTimeout","LinkEditor","href","handeKeyDown","keyCode","preventDefault","inputLink","setTarget","handleUnlink","toggleSelectionLink","_this$state","_ContentUtils$getSele","getSelectionEntityData","textSelected","isSelectionCollapsed","getSelectionBlockType","spellCheck","placeholder","linkEditor","inputPlaceHolder","onKeyDown","_Switch2","openInNewWindow","removeLink","unlink","_Modal","ControlBar","mediaLibiraryModal","extendedModals","openMediaLibrary","braftFinder","ReactComponent","mediaProps","MediaLibrary","onBeforeDeselect","onDeselect","onBeforeSelect","onSelect","onBeforeRemove","onRemove","onFileSelect","onBeforeInsert","mediaLibirary","closeMediaLibrary","onInsert","insertMedias","externals","medias","extendControls","modal","toggleSelectionInlineStyle","toggleSelectionBlockType","_props2","textBackgroundColor","currentBlockType","supportedControls","_controls2","commonProps","renderedExtendControls","html","component","onCreate","renderedControls","itemKey","indexOf","toLowerCase","controlItem","subItem","_Headings2","applyControl","_TextColor2","_FontSize2","_LineHeight2","_LetterSpacing2","_TextIndent2","_FontFamily2","_EmojiPicker2","_LinkEditor2","_TextAlign2","image","video","audio","buttonClassName","getControlItemClassName","viewLink","getModifierState","tempLink","click","strategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","getType","_contentState$getEnti","getData","Link","customStyles","arguments","colorStyles","bgColorStyles","fontSizeStyles","fontFamilyStyles","lineHeightStyles","letterSpacingtStyles","indentStyles","toUpperCase","indent","paddingLeft","paddingRight","SUPERSCRIPT","position","top","SUBSCRIPT","bottom","customBlockStyleFn","block","blockAlignment","blockFloat","result","HorizontalLine","removeHorizontalLine","removeBlock","Embed","toolbarVisible","playerVisible","showPlayer","url","mediaData","playerModal","videoPlayer","embedTitle","handlePlayerClose","removeEmbed","showToolbar","hideToolbar","onMouseOver","onMouseLeave","toolbarElement","Audio","audioPlayer","src","removeAudio","Video","_this$props$mediaData","meta","poster","removeVideo","_controls","Image","toolbarOffset","linkEditorVisible","sizeEditorVisible","tempWidth","tempHeight","handleDragStart","__BRAFT_DRAGING__IMAGE__","setDraftProps","readOnly","handleDragEnd","executeCommand","_command$split","split","_command$split2","_slicedToArray","method","param","removeImage","toggleLinkEditor","toggleSizeEditor","handleLinkInputKeyDown","confirmImageLink","setImageLink","setMediaData","forceRender","handleSizeInputKeyDown","confirmImageSize","setImageWidth","_ref2","setImageHeight","_ref3","newImageSize","setImageFloat","float","setMediaPosition","setImageAlignment","calcToolbarOffset","imageControls","blockData","link_target","imageStyles","clearFix","renderedControlItems","draggable","onMouseEnter","onMouseMove","onDragStart","onDragEnd","mediaEmbederInstance","inputWithEnterPlaceHolder","defaultValue","setImageLinkTarget","imageElement","toolbarRect","imageRect","_immutable","_draftJs","getBlockRendererFn","customBlockRendererFn","blockRenderer","superProps","getEntityAt","entity","mediaType","_Image2","_Audio2","_Video2","_Embed2","_HorizontalLine2","extendAtomics","atomics","getAtomicBlockComponent","editable","customBlockRenderMap","Map","atomic","element","code-block","wrapper","DefaultDraftBlockRenderMap","getBlockStyleFn","_getBlockStyleFn","getCustomStyleMap","_getCustomStyleMap","decorators","_decorators","excludeControls","componentBelowControlBar","pasteImage","uploadFn","validateFn","embed","tabIndents","draftProps","onFocus","onBlur","onSave","customKeyBindingFn","KeyBindingUtil","hasCommandModifier","isCtrlKeyCommand","getDefaultKeyBinding","inert","tempColors","border","floatLeft","floatRight","en","zh","zh-hant","zhHant","_renderers","editorDecorators","CompositeDecorator","BraftEditor","getDraftInstance","draftInstance","getFinderInstance","getValue","createEditorState","getCurrentContent","onTab","repeat","isFocused","focus","handleKeyCommand","nextEditorState","handleReturn","currentBlock","getSelectionBlock","getLength","which","handleNewLine","handleDrop","selectionState","dataTransfer","isInternal","getText","handleDroppedFiles","files","resolveFiles","handlePastedFiles","handlePastedText","htmlString","stripPastedStyles","ColorUtils","detectColorsFromHTMLString","concat","_toConsumableArray","array","insertHTML","uploadImage","removeSelectionInlineStyles","insertHorizontalLine","clearEditorContent","setEditorContainerNode","keyBindingFn","_keybindings2","blockStyleFn","blockRenderMap","merge","blockRenderMapFn","createEmptyEditorState","Promise","then","BraftFinder","forceUpdate","catch","isEditorState","warn","_onSelect","nextProps","languages","externalMedias","controlBarProps","controlBarInstance","blockRendererFn","customStyleMap","_ControlBar2","Editor"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"braft-utils\"), require(\"draft-js\"), require(\"braft-finder\"), require(\"react-dom\"), require(\"immutable\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"braft-utils\", \"draft-js\", \"braft-finder\", \"react-dom\", \"immutable\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\"), require(\"braft-utils\"), require(\"draft-js\"), require(\"braft-finder\"), require(\"react-dom\"), require(\"immutable\")) : factory(root[\"react\"], root[\"braft-utils\"], root[\"draft-js\"], root[\"braft-finder\"], root[\"react-dom\"], root[\"immutable\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__29__, __WEBPACK_EXTERNAL_MODULE__32__) {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t};\n\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"\" + chunkId + \".index.js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import './style.scss'\nimport React from 'react'\nimport ResponsiveHelper from 'helpers/responsive'\nimport { BaseUtils } from 'braft-utils'\n\nexport default class DropDown extends React.Component {\n\n  alive = false\n  responsiveResolveId = null\n  dropDownHandlerElement = null\n  dropDownContentElement = null\n  componentId = this.props.componentId || ('BRAFT-DROPDOWN-' + BaseUtils.UniqueIndex())\n  state = {\n    active: false,\n    offset: 0\n  }\n\n  componentDidMount () {\n\n    this.alive = true\n    //this.fixDropDownPosition()\n\n    document.body.addEventListener('click', (event) => {\n      this.registerClickEvent(event)\n    })\n\n    this.responsiveResolveId = ResponsiveHelper.resolve(() => {\n      this.fixDropDownPosition()\n    })\n\n  }\n\n  componentWillReceiveProps (next) {\n\n    if (!this.props.disabled && next.disabled) {\n      this.hide()\n    }\n\n  }\n\n  componentDidUpdate (prevState) {\n\n    if (!prevState.active && this.state.active) {\n      this.fixDropDownPosition()\n    }\n\n  }\n\n  componentWillUnmount () {\n\n    document.body.removeEventListener('click', (event) => {\n      this.registerClickEvent(event)\n    })\n\n    this.alive = false\n    ResponsiveHelper.unresolve(this.responsiveResolveId)\n\n  }\n\n  render () {\n\n    let { active, offset } = this.state\n    let { caption, htmlCaption, hoverTitle, disabled, showDropDownArrow, arrowActive, className, children, editorHeight } = this.props\n\n    disabled && (active = false)\n\n    const dropDownContentInnerStyle = !isNaN(editorHeight) && editorHeight > 0 ? {\n      maxHeight: editorHeight - 30 + 'px'\n    } : {}\n\n    return (\n      <div\n        id={this.componentId}\n        className={\"Braft-dropdown \" + (active ? \"active \" : \"\") + (disabled ? \"disabled \" : \"\") + className}\n      >\n        {htmlCaption ? (\n          <button\n            type=\"button\"\n            className=\"dropdown-handler\"\n            title={hoverTitle}\n            data-braft-component-id={this.componentId}\n            dangerouslySetInnerHTML={htmlCaption ? {__html: htmlCaption} : null}\n            ref={(instance) => this.dropDownHandlerElement = instance}\n          ></button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"dropdown-handler\"\n            title={hoverTitle}\n            data-braft-component-id={this.componentId}\n            ref={(instance) => this.dropDownHandlerElement = instance}\n          >\n            <span>{caption}</span>\n            {showDropDownArrow !== false ? <i className=\"braft-icon-drop-down\"></i> : null}\n          </button>\n        )}\n        <div\n          className=\"dropdown-content\"\n          style={{marginLeft: offset + 'px'}}\n          ref={(instance) => this.dropDownContentElement = instance}\n        >\n          <i\n            style={{marginLeft: offset * -1}}\n            className={'dropdown-arrow' + (arrowActive ? ' active' : '')}\n          ></i>\n          <div\n            className=\"dropdown-content-inner\"\n            style={dropDownContentInnerStyle}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n\n  fixDropDownPosition () {\n\n    const viewRect = this.props.containerNode.getBoundingClientRect()\n    const handlerRect = this.dropDownHandlerElement.getBoundingClientRect()\n    const contentRect = this.dropDownContentElement.getBoundingClientRect()\n\n    let offset = 0\n    let right = handlerRect.right - handlerRect.width / 2 + contentRect.width / 2\n    let left = handlerRect.left + handlerRect.width / 2 - contentRect.width / 2\n\n    right = viewRect.right - right\n    left = left - viewRect.left\n\n    if (right < 10) {\n      offset = right - 10\n    } else if (left < 10) {\n      offset = left * -1 + 10\n    }\n\n    offset !== this.state.offset && this.setState({ offset })\n\n  }\n\n  registerClickEvent (event) {\n\n    let { autoHide } = this.props\n    let active = false\n\n    if (event.target.dataset.braftComponentId === this.componentId) {\n      active = event.target.dataset.keepActive ? true : !this.state.active\n    } else if (autoHide === false) {\n      active = this.state.active\n    }\n\n    this.alive && this.setState({ active })\n\n  }\n\n  show () {\n    this.setState({\n      active: true\n    })\n  }\n\n  hide () {\n    this.setState({\n      active: false\n    })\n  }\n\n\n}","import './style.scss'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BaseUtils } from 'braft-utils'\n\nexport default class Modal extends React.Component {\n\n  constructor (props) {\n\n    super(props)\n    this.active = false\n    this.componentId = 'BRAFT-MODAL-' + BaseUtils.UniqueIndex()\n\n  }\n\n  static defaultProps = {\n    showHeader: true,\n    showFooter: true\n  }\n\n  componentDidMount () {\n\n    if (this.props.visible) {\n      this.active = true\n      this.renderComponent(this.props)\n    }\n\n  }\n\n  componentWillReceiveProps (next) {\n\n    if (this.props.visible && !next.visible) {\n      this.unrenderComponent()\n    } else if (this.props.visible || next.visible) {\n      this.active = true\n      this.renderComponent(next)\n    }\n\n  }\n\n  render () {\n    return null\n  }\n\n  handleTransitionEnd = () => {\n\n    if (!this.rootElement || !this.rootElement.classList) {\n      return false\n    }\n\n    if (!this.rootElement.classList.contains('active')) {\n      ReactDOM.unmountComponentAtNode(this.rootElement) && this.rootElement.parentNode.removeChild(this.rootElement)\n    }\n\n  }\n\n  unrenderComponent () {\n    this.active = false\n    this.activeId && window.clearImmediate(this.activeId)\n    if (this.rootElement && this.rootElement.classList) {\n      this.rootElement.classList.remove('active')\n    }\n  }\n\n  renderComponent (props) {\n\n    if (!this.active) {\n      return false\n    }\n\n    let { title, className, width, height, children, confirmable, showHeader, showFooter, showCancel, showConfirm, showClose, cancelText, confirmText, bottomText, language } = props\n\n    typeof showCancel === 'undefined' && (showCancel = true)\n    typeof showClose === 'undefined' && (showClose = true)\n    typeof showConfirm === 'undefined' && (showConfirm = true)\n\n    const childComponent = (\n      <div className={\"braft-modal \" + (className || '')}>\n        <div className=\"braft-modal-mask\"></div>\n        <div onTransitionEnd={this.handleTransitionEnd} style={{width, height}} className=\"braft-modal-content\">\n          <div className=\"braft-modal-header\">\n            <h3 className=\"braft-modal-caption\">{title}</h3>\n            {showClose && <button type=\"button\" onClick={this.close} className=\"braft-modal-close-button\"><i className=\"braft-icon-close\"></i></button>}\n          </div>\n          <div className=\"braft-modal-body\">{children}</div>\n          {showFooter ? (\n            <div className=\"braft-modal-footer\">\n              <div className=\"braft-modal-addon-text\">{bottomText}</div>\n              <div className=\"braft-modal-buttons\">\n                {showCancel && <button type=\"button\" onClick={this.handleCancel} className=\"braft-modal-cancel\">{cancelText || language.base.cancel}</button>}\n                {showConfirm && <button type=\"button\" onClick={this.handleConfirm} className={\"braft-modal-confirm \" + (!confirmable ? 'disabled' : '')}>{confirmText || language.base.confirm}</button>}\n              </div>\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n\n    this.rootElement = document.querySelector('#' + this.componentId)\n\n    if (!this.rootElement) {\n      this.rootElement = document.createElement('div')\n      this.rootElement.id = this.componentId\n      this.rootElement.className = 'braft-modal-root'\n      document.body.appendChild(this.rootElement)\n    }\n\n    ReactDOM.render(childComponent, this.rootElement)\n\n    this.activeId = window.setImmediate(() => {\n      this.rootElement.classList.add('active')\n    })\n\n  }\n\n  handleCancel = () => {\n    this.props.closeOnCancel && this.close()\n    this.props.onCancel && this.props.onCancel()\n  }\n\n  handleConfirm = () => {\n    this.props.closeOnConfirm && this.close()\n    this.props.onConfirm && this.props.onConfirm()\n  }\n\n  close = () => {\n    this.unrenderComponent()\n    this.props.onClose && this.props.onClose()\n  }\n\n}\n\nexport const showModal = (props) => {\n\n  const hostNode = document.createElement('div')\n  hostNode.style.display = 'none'\n  document.body.appendChild(hostNode)\n\n  const close = () => {\n    ReactDOM.unmountComponentAtNode(hostNode) && hostNode.parentNode.removeChild(hostNode)\n  }\n\n  const onConfirm = () => {\n    close()\n    props.onConfirm && props.onConfirm()\n  }\n\n  const onCancel = () => {\n    close()\n    props.onCancel && props.onCancel()\n  }\n\n  const onClose = () => {\n    close()\n    props.onClose && props.onClose()\n  }\n\n  const extProps = {\n    onConfirm, onCancel, onClose,\n    visible: true,\n    closeOnConfirm: true,\n    closeOnCancel: true\n  }\n\n  const modalInstance = ReactDOM.render(<Modal { ...props } { ...extProps }/>, hostNode)\n  modalInstance.destroy = close\n  modalInstance.update = modalInstance.renderComponent\n\n  return modalInstance\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","import React from 'react'\n\nexport default (lang) => [\n  {\n    key: 'undo',\n    title: lang.controls.undo,\n    text: <i className=\"braft-icon-undo\"></i>,\n    type: 'editor-method',\n    command: 'undo'\n  }, {\n    key: 'redo',\n    title: lang.controls.redo,\n    text: <i className=\"braft-icon-redo\"></i>,\n    type: 'editor-method',\n    command: 'redo'\n  }, {\n    key: 'remove-styles',\n    title: lang.controls.removeStyles,\n    text: <i className=\"braft-icon-format_clear\"></i>,\n    type: 'editor-method',\n    command: 'removeSelectionInlineStyles'\n  }, {\n    key: 'hr',\n    title: lang.controls.hr,\n    text: <i className=\"braft-icon-hr\"></i>,\n    type: 'editor-method',\n    command: 'insertHorizontalLine'\n  }, {\n    key: 'bold',\n    title: lang.controls.bold,\n    text: <i className=\"braft-icon-bold\"></i>,\n    type: 'inline-style',\n    command: 'bold'\n  },{\n    key: 'italic',\n    title: lang.controls.italic,\n    text: <i className=\"braft-icon-italic\"></i>,\n    type: 'inline-style',\n    command: 'italic'\n  }, {\n    key: 'underline',\n    title: lang.controls.underline,\n    text: <i className=\"braft-icon-underlined\"></i>,\n    type: 'inline-style',\n    command: 'underline'\n  }, {\n    key: 'strike-through',\n    title: lang.controls.strikeThrough,\n    text: <i className=\"braft-icon-strikethrough\"></i>,\n    type: 'inline-style',\n    command: 'strikethrough',\n  }, {\n    key: 'superscript',\n    title: lang.controls.superScript,\n    text: <i className=\"braft-icon-superscript\"></i>,\n    type: 'inline-style',\n    command: 'superscript'\n  }, {\n    key: 'subscript',\n    title: lang.controls.subScript,\n    text: <i className=\"braft-icon-subscript\"></i>,\n    type: 'inline-style',\n    command: 'subscript'\n  }, {\n    key: 'headings',\n    title: lang.controls.headings,\n    type: 'headings',\n  }, {\n    key: 'blockquote',\n    title: lang.controls.blockQuote,\n    text: <i className=\"braft-icon-quote\"></i>,\n    type: 'block-type',\n    command: 'blockquote',\n  }, {\n    key: 'code',\n    title: lang.controls.code,\n    text: <i className=\"braft-icon-code\"></i>,\n    type: 'block-type',\n    command: 'code-block'\n  }, {\n    key: 'list_ul',\n    title: lang.controls.unorderedList,\n    text: <i className=\"braft-icon-list\"></i>,\n    type: 'block-type',\n    command: 'unordered-list-item'\n  }, {\n    key: 'list_ol',\n    title: lang.controls.orderedList,\n    text: <i className=\"braft-icon-list-numbered\"></i>,\n    type: 'block-type',\n    command: 'ordered-list-item'\n  }, {\n    key: 'link',\n    title: lang.controls.link,\n    type: 'link'\n  }, {\n    key: 'text-color',\n    title: lang.controls.color,\n    type: 'text-color'\n  }, {\n    key: 'line-height',\n    title: lang.controls.lineHeight, \n    type: 'line-height'\n  }, {\n    key: 'letter-spacing',\n    title: lang.controls.letterSpacing,\n    type: 'letter-spacing'\n  }, {\n    key: 'text-indent',\n    title: lang.controls.textIndent,\n    type: 'text-indent'\n  },{\n    key: 'font-size',\n    title: lang.controls.fontSize,\n    type: 'font-size'\n  }, {\n    key: 'font-family',\n    title: lang.controls.fontFamily,\n    type: 'font-family'\n  }, {\n    key: 'text-align',\n    title: lang.controls.textAlign,\n    type: 'text-align'\n  }, {\n    key: 'media',\n    title: lang.controls.media,\n    text: <i className=\"braft-icon-media\"></i>,\n    type: 'media'\n  }, {\n    key: 'emoji',\n    title: lang.controls.emoji,\n    text: <i className=\"braft-icon-emoji\"></i>,\n    type: 'emoji'\n  }, {\n    key: 'clear',\n    title: lang.controls.clear,\n    text: <span className=\"braft-control-text\">{lang.controls.clear}</span>,\n    type: 'editor-method',\n    command: 'clearEditorContent'\n  }\n]\n\nexport const imageControlItems = {\n  'float-left': {\n    text: <span data-float=\"left\">&#xe91e;</span>,\n    command: 'setImageFloat|left'\n  },\n  'float-right': {\n    text: <span data-float=\"right\">&#xe914;</span>,\n    command: 'setImageFloat|right'\n  },\n  'align-left': {\n    text: <span data-align=\"left\">&#xe027;</span>,\n    command: 'setImageAlignment|left'\n  },\n  'align-center': {\n    text: <span data-align=\"center\">&#xe028;</span>,\n    command: 'setImageAlignment|center'\n  },\n  'align-right': {\n    text: <span data-align=\"right\">&#xe029;</span>,\n    command: 'setImageAlignment|right'\n  },\n  'size': {\n    text: <span>&#xe3c2;</span>,\n    command: 'toggleSizeEditor'\n  },\n  'link': {\n    text: <span>&#xe91a;</span>,\n    command: 'toggleLinkEditor'\n  },\n  'remove': {\n    text: <span>&#xe9ac;</span>,\n    command: 'removeImage'\n  }\n}","import './style.scss'\nimport React from 'react'\n\nexport default (props) => {\n\n  const { active, onClick, className } = props\n\n  return (\n    <div onClick={() => onClick()} className={\"switch-button \" + className + (active ? ' active' : '')}></div>\n  )\n\n}\n","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentIndent = null\n\n  props.textIndents.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'INDENT-' + item)) {\n      caption = item\n      currentIndent = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.textIndent}\n      className={\"control-item dropdown braft-indent-dropdown\"}\n    >\n      <ul className=\"braft-text-indents-wrap\">\n        {props.textIndents.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentIndent ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionIndent(props.editorState, e.currentTarget.dataset.size, props.textIndents))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentLetterSpacing = null\n\n  props.letterSpacings.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'LETTERSPACING-' + item)) {\n      caption = item\n      currentLetterSpacing = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.letterSpacing}\n      className={\"control-item dropdown braft-letter-spacing-dropdown\"}\n    >\n      <ul className=\"braft-letter-spacings-wrap\">\n        {props.letterSpacings.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentLetterSpacing ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionLetterSpacing(props.editorState, e.currentTarget.dataset.size, props.letterSpacings))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  return (\n    <DropDown\n      caption={props.defaultCaption}\n      showDropDownArrow={false}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.emoji}\n      className={\"control-item dropdown braft-emoji-dropdown\"}\n    >\n      <div className=\"braft-emojis-wrap\">\n        <ul className=\"braft-emojis\">\n          {props.emojis.map((item, index) => {\n            return (\n              <li\n                key={index}\n                data-emoji={item}\n                onClick={(e) => {\n                  props.editor.setValue(ContentUtils.insertText(props.editorState, e.currentTarget.dataset.emoji))\n                  props.editor.requestFocus()\n                }}\n              >{item}</li>\n            )\n          })}\n        </ul>\n      </div>\n    </DropDown>\n  )\n\n}","import React from 'react'\nimport { ContentUtils } from 'braft-utils'\n\nexport default class TextAlign extends React.Component {\n\n  state = {\n    currentAlignment: undefined\n  }\n\n  componentWillReceiveProps (next) {\n    this.setState({\n      currentAlignment: ContentUtils.getSelectionBlockData(next.editorState, 'textAlign')\n    })\n  }\n\n  setAlignment = (e) => {\n    this.props.editor.setValue(ContentUtils.toggleSelectionAlignment(this.props.editorState, e.currentTarget.dataset.alignment))\n    this.props.editor.requestFocus()\n  }\n\n  render () {\n\n    const textAlignmentTitles = [\n      this.props.language.controls.alignLeft,\n      this.props.language.controls.alignCenter,\n      this.props.language.controls.alignRight,\n      this.props.language.controls.alignJustify\n    ]\n\n    return (\n      <div className=\"control-item-group\">\n        {\n          this.props.textAligns.map((item, index) => {\n            return (\n              <button\n                type=\"button\"\n                key={index}\n                title={textAlignmentTitles[index]}\n                data-alignment={item}\n                className={'control-item button ' + (item === this.state.currentAlignment ? 'active' : null)}\n                onClick={this.setAlignment}\n              >\n                <i className={\"braft-icon-align-\" + item}></i>\n              </button>\n            )\n          })\n        }\n      </div>\n    )\n\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentIndex = null\n\n  props.fontFamilies.find((item, index) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'FONTFAMILY-' + item.name)) {\n      caption = item.name\n      currentIndex = index\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.fontFamily}\n      arrowActive={currentIndex === 0}\n      className={\"control-item dropdown font-family-dropdown\"}\n    >\n      <ul className=\"menu\">\n        {props.fontFamilies.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={\"menu-item \" + (index === currentIndex ? 'active' : '')}\n              data-name={item.name}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionFontFamily(props.editorState, e.currentTarget.dataset.name, props.fontFamilies))\n                props.editor.requestFocus()\n              }}\n            >\n              <span style={{fontFamily: item.family}}>{item.name}</span>\n            </li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentLineHeight = null\n\n  props.lineHeights.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'LINEHEIGHT-' + item)) {\n      caption = item\n      currentLineHeight = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.lineHeight}\n      className={\"control-item dropdown braft-line-height-dropdown\"}\n    >\n      <ul className=\"braft-line-heights-wrap\">\n        {props.lineHeights.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentLineHeight ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionLineHeight(props.editorState, e.currentTarget.dataset.size, props.lineHeights))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentFontSize = null\n\n  props.fontSizes.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'FONTSIZE-' + item)) {\n      caption = item + 'px'\n      currentFontSize = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      editorHeight={props.editorHeight}\n      containerNode={props.containerNode}\n      hoverTitle={props.language.controls.fontSize}\n      className={\"control-item dropdown braft-font-size-dropdown\"}\n    >\n      <ul className=\"braft-font-sizes-wrap\">\n        {props.fontSizes.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentFontSize ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionFontSize(props.editorState, e.currentTarget.dataset.size, props.fontSizes))\n                props.editor.requestFocus()\n              }}\n            >{item + 'px'}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\n\nexport default (props) => {\n\n  const { current, colors, onChange, language } = props\n\n  return (\n    <div className=\"braft-color-list-wrap\">\n      <ul className=\"braft-color-list\">\n        {colors.map((item, index) => {\n          let className = item === current ? 'color-item active' : 'color-item'\n          return (\n            <li\n              key={index}\n              title={item}\n              className={className}\n              style={{color: item}}\n              data-color={item.replace('#', '')}\n              onClick={(e) => props.onChange(e.currentTarget.dataset.color)}\n            >\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport ColorPicker from 'components/common/ColorPicker'\nimport { BaseUtils, ContentUtils } from 'braft-utils'\n\nexport default class TextColor extends React.Component {\n\n  state = {\n    colorType: 'color'\n  }\n\n  dropDownComponentId = 'BRAFT-DROPDOWN-' + BaseUtils.UniqueIndex()\n\n  render () {\n\n    let captionStyle = {}\n    let currentColor = null\n    let { colorType } = this.state\n\n    this.props.colors.forEach((color) => {\n      let color_id = color.replace('#', '')\n      if (ContentUtils.selectionHasInlineStyle(this.props.editorState, 'COLOR-' + color_id)) {\n        captionStyle.color = color\n        colorType === 'color' && (currentColor = color)\n      }\n\n      if (ContentUtils.selectionHasInlineStyle(this.props.editorState, 'BGCOLOR-' + color_id)) {\n        captionStyle.backgroundColor = color\n        colorType === 'backgroundColor' && (currentColor = color)\n      }\n\n    })\n\n    const caption = (\n      <i style={captionStyle} className=\"braft-icon-text-color\">\n        <span className=\"path1\"></span>\n        <span className=\"path2\"></span>\n      </i>\n    )\n\n    return (\n      <DropDown\n        caption={caption}\n        hoverTitle={this.props.language.controls.color}\n        showDropDownArrow={false}\n        containerNode={this.props.containerNode}\n        editorHeight={this.props.editorHeight}\n        componentId={this.dropDownComponentId}\n        ref={(instance) => this.dropDownComponent = instance}\n        className={\"control-item dropdown text-color-dropdown\"}\n      >\n        <div className=\"braft-text-color-picker-wrap\">\n          <div className=\"braft-color-switch-buttons\" style={this.props.enableBackgroundColor ? {} : {display: 'none'}}>\n            <button\n              type=\"button\"\n              data-type=\"color\"\n              data-keep-active={true}\n              data-braft-component-id={this.dropDownComponentId}\n              className={colorType === 'color' ? 'active' : ''}\n              onClick={this.switchColorType}\n            >{this.props.language.controls.textColor}</button>\n            <button\n              type=\"button\"\n              data-type=\"backgroundColor\"\n              data-keep-active={true}\n              data-braft-component-id={this.dropDownComponentId}\n              className={colorType === 'backgroundColor' ? 'active' : ''}\n              onClick={this.switchColorType}\n            >{this.props.language.controls.backgroundColor}</button>\n          </div>\n          <ColorPicker\n            width={200}\n            language={this.props.language}\n            current={currentColor}\n            disableAlpha={true}\n            colors={this.props.colors}\n            onChange={this.toggleColor}\n          />\n        </div>\n      </DropDown>\n    )\n\n  }\n\n  switchColorType = (e) => {\n\n    this.setState({\n      colorType: e.currentTarget.dataset.type\n    })\n\n  }\n\n  toggleColor = (color) => {\n\n    if (this.state.colorType === 'color') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionColor(this.props.editorState, color, this.props.colors))\n    } else {\n      this.props.editor.setValue(ContentUtils.toggleSelectionBackgroundColor(this.props.editorState, color, this.props.colors))\n    }\n\n    this.dropDownComponent.hide()\n    this.props.editor.requestFocus()\n\n  }\n\n}","import React from 'react'\n\nexport const getHeadings = (lang) => [\n  {\n    key: 'header-one',\n    title: lang.controls.header + ' 1',\n    text: <h1>{lang.controls.header} 1</h1>,\n    type: 'block-type',\n    command: 'header-one'\n  }, {\n    key: 'header-two',\n    title: lang.controls.header + ' 2',\n    text: <h2>{lang.controls.header} 2</h2>,\n    type: 'block-type',\n    command: 'header-two'\n  }, {\n    key: 'header-three',\n    title: lang.controls.header + ' 3',\n    text: <h3>{lang.controls.header} 3</h3>,\n    type: 'block-type',\n    command: 'header-three'\n  }, {\n    key: 'header-four',\n    title: lang.controls.header + ' 4',\n    text: <h4>{lang.controls.header} 4</h4>,\n    type: 'block-type',\n    command: 'header-four'\n  }, {\n    key: 'header-five',\n    title: lang.controls.header + ' 5',\n    text: <h5>{lang.controls.header} 5</h5>,\n    type: 'block-type',\n    command: 'header-five'\n  }, {\n    key: 'header-six',\n    title: lang.controls.header + ' 6',\n    text: <h6>{lang.controls.header} 6</h6>,\n    type: 'block-type',\n    command: 'header-six'\n  }, {\n    key: 'unstyled',\n    title: lang.controls.normal,\n    text: lang.controls.normal,\n    type: 'block-type',\n    command: 'unstyled'\n  }\n]\n\nexport const blocks = {\n  'header-one': 'h1',\n  'header-two': 'h2',\n  'header-three': 'h3',\n  'header-four': 'h4',\n  'header-fiv': 'h5',\n  'header-six': 'h6',\n  'unstyled': 'p',\n  'blockquote': 'blockquote'\n}","import './style.scss'\nimport React from 'react'\nimport { getHeadings } from 'configs/maps'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  const headings = getHeadings(props.language)\n  const currentHeadingIndex = headings.findIndex((item) => item.command === props.current)\n  const caption = headings[currentHeadingIndex] ? headings[currentHeadingIndex].title : props.language.controls.normal\n\n  return (\n    <DropDown\n      caption={caption}\n      containerNode={props.containerNode}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.headings}\n      arrowActive={currentHeadingIndex === 0}\n      className={\"control-item dropdown headings-dropdown\"}\n    >\n      <ul className=\"menu\">\n        {\n          headings.map((item, index) => {\n            let isActive = props.current === item.command\n            return (\n              <li\n                key={index}\n                className={\"menu-item\" + (isActive ? ' active' : '')}\n                onClick={() => props.onChange(item.command, item.type)}\n              >\n                {item.text}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </DropDown>\n  )\n\n}","import { BaseUtils } from 'braft-utils'\n\nlet resizeEventHandlers = []\nlet responsiveHelperInited = false\nlet debouce = false\n\nexport default {\n\n  resolve (eventHandler) {\n    let id = BaseUtils.UniqueIndex()\n    resizeEventHandlers.push({ id, eventHandler })\n    return id\n  },\n\n  unresolve (id) {\n    resizeEventHandlers = resizeEventHandlers.filter(item => item.id !== id)\n  }\n\n}\n\nif (!responsiveHelperInited) {\n\n  window.addEventListener('resize', (event) => {\n    clearTimeout(debouce)\n    debouce = setTimeout(() => {\n      resizeEventHandlers.map((item) => {\n        typeof item.eventHandler === 'function' && item.eventHandler(event)\n      })\n      debouce = false\n    }, 100)\n  })\n\n  responsiveHelperInited = true\n\n}","import './style.scss'\nimport React from 'react'\nimport Switch from 'components/common/Switch'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default class LinkEditor extends React.Component {\n\n  state = {\n    href: '',\n    target: ''\n  }\n\n  dropDownComponent = null\n\n  componentWillReceiveProps (next) {\n\n    const { href, target } = ContentUtils.getSelectionEntityData(next.editorState, 'LINK')\n    this.setState({\n      href: href || '',\n      target: target || ''\n    })\n\n  }\n\n  render () {\n\n    const { href, target } = this.state\n    const caption = <i className=\"braft-icon-link\"></i>\n    const textSelected = !ContentUtils.isSelectionCollapsed(this.props.editorState) && ContentUtils.getSelectionBlockType(this.props.editorState) !== 'atomic'\n\n    return (\n      <div className=\"control-item-group\">\n        <DropDown\n          caption={caption}\n          hoverTitle={this.props.language.controls.link}\n          autoHide={false}\n          containerNode={this.props.containerNode}\n          showDropDownArrow={false}\n          disabled={!textSelected}\n          ref={(instance) => this.dropDownComponent = instance}\n          className={\"control-item dropdown link-editor-dropdown\"}\n        >\n          <div className=\"braft-link-editor\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                value={href}\n                spellCheck={false}\n                placeholder={this.props.language.linkEditor.inputPlaceHolder}\n                onKeyDown={this.handeKeyDown}\n                onChange={this.inputLink}\n              />\n            </div>\n            <div className=\"switch-group\">\n              <Switch\n                active={target === '_blank'}\n                onClick={this.setTarget}\n              />\n              <label>{this.props.language.linkEditor.openInNewWindow}</label>\n            </div>\n            <div className=\"buttons\">\n              <a onClick={this.handleUnlink} className=\"primary pull-left\" href=\"javascript:void(0);\">\n                <i className=\"braft-icon-close\"></i>\n                <span>{this.props.language.linkEditor.removeLink}</span>\n              </a>\n              <button type=\"button\" onClick={this.handleConfirm} className=\"primary pull-right\">{this.props.language.base.confirm}</button>\n              <button type=\"button\" onClick={this.handleCancel} className=\"default pull-right\">{this.props.language.base.cancel}</button>\n            </div>\n          </div>\n        </DropDown>\n        <button\n          type=\"button\"\n          title={this.props.language.controls.unlink}\n          className=\"control-item button\"\n          onClick={this.handleUnlink}\n          disabled={!textSelected || !href}\n        >\n          <i className=\"braft-icon-link-off\"></i>\n        </button>\n      </div>\n    )\n\n  }\n\n  handeKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      this.handleConfirm()\n      e.preventDefault()\n      return false\n    }\n  }\n\n  inputLink = (e) => {\n    this.setState({\n      href: e.currentTarget.value\n    })\n  }\n\n  setTarget = () => {\n    this.setState({\n      target: this.state.target === '_blank' ? '' : '_blank'\n    })\n  }\n\n  handleCancel = () => {\n    this.dropDownComponent.hide()\n  }\n\n  handleUnlink = () => {\n    this.dropDownComponent.hide()\n    this.props.editor.setValue(ContentUtils.toggleSelectionLink(this.props.editorState, false))\n  }\n\n  handleConfirm = () => {\n\n    const { href, target } = this.state\n    this.props.editor.setValue(ContentUtils.toggleSelectionLink(this.props.editorState, href, target))\n    this.dropDownComponent.hide()\n    this.props.editor.requestFocus()\n\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport getSupportedControls from 'configs/controls'\nimport LinkEditor from 'components/business/LinkEditor'\nimport HeadingPicker from 'components/business/Headings'\nimport TextColorPicker from 'components/business/TextColor'\nimport FontSizePicker from 'components/business/FontSize'\nimport LineHeightPicker from 'components/business/LineHeight'\nimport FontFamilyPicker from 'components/business/FontFamily'\nimport TextAlign from 'components/business/TextAlign'\nimport EmojiPicker from 'components/business/EmojiPicker'\nimport LetterSpacingPicker from 'components/business/LetterSpacing'\nimport TextIndentPicker from 'components/business/TextIndent'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\nimport { showModal } from 'components/common/Modal'\n\nexport default class ControlBar extends React.Component {\n\n  mediaLibiraryModal = null\n  extendedModals = {}\n\n  componentDidUpdate () {\n\n    const { extendControls, language } = this.props\n\n    extendControls.forEach(item => {\n      if (item.type === 'modal') {\n        if (item.modal && item.modal.id && this.extendedModals[item.modal.id]) {\n          this.extendedModals[item.modal.id].update({ ...item.modal, language })\n        }\n      }\n    })\n\n  }\n\n  getControlItemClassName (data) {\n\n    let className = 'control-item button'\n    let { type, command } = data\n\n    if (type === 'inline-style' && ContentUtils.selectionHasInlineStyle(this.props.editorState, command)) {\n      className += ' active'\n    } else if (type === 'block-type' && ContentUtils.getSelectionBlockType(this.props.editorState) === command) {\n      className += ' active'\n    }\n\n    return className\n\n  }\n\n  applyControl (command, type) {\n\n    if (type === 'inline-style') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionInlineStyle(this.props.editorState, command))\n    } else if (type === 'block-type') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionBlockType(this.props.editorState, command))\n    } else if (type === 'editor-method') {\n      this.props.editor[command] && this.props.editor[command]()\n    }\n\n    this.props.editor.requestFocus()\n\n  }\n\n  openMediaLibrary = () => {\n\n    if (!this.props.braftFinder || !this.props.braftFinder.ReactComponent) {\n      return false\n    }\n\n    const mediaProps = this.props.media\n    const MediaLibrary = this.props.braftFinder.ReactComponent\n    const { onBeforeDeselect, onDeselect, onBeforeSelect, onSelect, onBeforeRemove, onRemove, onFileSelect, onBeforeInsert, onChange } = mediaProps\n\n    this.mediaLibiraryModal = showModal({\n      title: this.props.language.controls.mediaLibirary,\n      language: this.props.language,\n      width: 640,\n      showFooter: false,\n      children: (\n        <MediaLibrary\n          onCancel={this.closeMediaLibrary}\n          onInsert={this.insertMedias}\n          externals={mediaProps.externals}\n          {...{onBeforeDeselect, onDeselect, onBeforeSelect, onSelect, onBeforeRemove, onRemove, onFileSelect, onBeforeInsert, onChange}}\n        />\n      )\n    })\n\n  }\n\n  insertMedias = (medias) => {\n    this.props.editor.setValue(ContentUtils.insertMedias(this.props.editorState, medias))\n    this.props.editor.requestFocus()\n    this.props.media.onInsert && this.props.media.onInsert(medias)\n    this.closeMediaLibrary()\n  }\n\n  closeMediaLibrary = () => {\n    this.props.media.onCancel && this.props.media.onCancel()\n    this.mediaLibiraryModal && this.mediaLibiraryModal.close()\n  }\n\n  render() {\n\n    const { editor, editorState, controls, media, extendControls, language, colors, fontSizes, fontFamilies, emojis, containerNode, lineHeights, letterSpacings, editorHeight, textAligns, textBackgroundColor, textIndents} = this.props\n    const currentBlockType = ContentUtils.getSelectionBlockType(editorState)\n    const supportedControls = getSupportedControls(language)\n    const commonProps = { editor, editorState, editorHeight, language, containerNode }\n\n    const renderedExtendControls = extendControls.map((item, index) => {\n      if (item.type === 'separator') {\n        return <span key={controls.length * 2 + index} className=\"separator-line\"></span>\n      } else if (item.type === 'dropdown') {\n        let { disabled, autoHide, html, text, className, showDropDownArrow, hoverTitle, component, arrowActive, ref } = item\n        return (\n          <DropDown\n            key={index}\n            className={\"control-item dropdown \" + className}\n            caption={text}\n            editorHeight={editorHeight}\n            htmlCaption={html}\n            showDropDownArrow={showDropDownArrow}\n            containerNode={containerNode}\n            hoverTitle={hoverTitle}\n            arrowActive={arrowActive}\n            autoHide={autoHide}\n            disabled={disabled}\n            ref={ref}\n          >\n            {component}\n          </DropDown>\n        )\n      } else if (item.type === 'modal') {\n        return (\n          <button\n            type=\"button\"\n            key={controls.length * 2 + index}\n            title={item.hoverTitle}\n            className={'control-item button ' + item.className}\n            dangerouslySetInnerHTML={item.html ? { __html: item.html } : null}\n            onClick={(event) => {\n              if (item.modal && item.modal.id) {\n                if (this.extendedModals[item.modal.id]) {\n                  this.extendedModals[item.modal.id].active = true\n                  this.extendedModals[item.modal.id].update({ ...item.modal, language })\n                } else {\n                  this.extendedModals[item.modal.id] = showModal({ ...item.modal, language })\n                  item.modal.onCreate && item.modal.onCreate(this.extendedModals[item.modal.id])\n                }\n              }\n              item.onClick && item.onClick(event)\n            }}\n          >\n            {!item.html ? item.text : null}\n          </button>\n        )\n      } else if (item.type === 'component') {\n        return (\n          <div\n            key={controls.length * 2 + index}\n            className={'control-item component-wrapper ' + item.className}\n          >{item.component}</div>\n        )\n      } else {\n        return (\n          <button\n            type=\"button\"\n            key={controls.length * 2 + index}\n            title={item.hoverTitle}\n            className={'control-item button ' + item.className}\n            dangerouslySetInnerHTML={item.html ? { __html: item.html } : null}\n            onClick={(event) => item.onClick && item.onClick(event)}\n          >\n            {!item.html ? item.text : null}\n          </button>\n        )\n      }\n    })\n\n    const renderedControls = []\n\n    return (\n      <div className=\"BraftEditor-controlBar\">\n        {\n          controls.map((item, index) => {\n            let itemKey = typeof item === 'string' ? item : item.key\n            if (typeof itemKey !== 'string') {\n              return null\n            }\n            if (renderedControls.indexOf(itemKey) > -1) {\n              return null\n            }\n            if (itemKey.toLowerCase() === 'separator') {\n              return <span key={index} className=\"separator-line\"></span>\n            }\n            let controlItem = supportedControls.find((subItem) => {\n              return subItem.key.toLowerCase() === itemKey.toLowerCase()\n            })\n            if (typeof item !== 'string') {\n              controlItem = { ...controlItem, ...item }\n            }\n            if (!controlItem) {\n              return null\n            }\n            renderedControls.push(itemKey)\n            if (controlItem.type === 'headings') {\n              return <HeadingPicker\n                key={index}\n                current={currentBlockType}\n                onChange={(command) => this.applyControl(command, 'block-type')}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'text-color') {\n              return <TextColorPicker\n                key={index}\n                colors={colors}\n                enableBackgroundColor={textBackgroundColor}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'font-size') {\n              return <FontSizePicker\n                key={index}\n                fontSizes={fontSizes}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'line-height') {\n              return <LineHeightPicker\n                key={index}\n                lineHeights={lineHeights}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'letter-spacing') {\n              return <LetterSpacingPicker\n                key={index}\n                letterSpacings={letterSpacings}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'text-indent') {\n              return <TextIndentPicker\n                key={index}\n                textIndents={textIndents}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'font-family') {\n              return <FontFamilyPicker\n                key={index}\n                fontFamilies={fontFamilies}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'emoji') {\n              return <EmojiPicker\n                key={index}\n                emojis={emojis}\n                defaultCaption={controlItem.text}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'link') {\n              return <LinkEditor\n                key={index}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'text-align') {\n              return (\n                <TextAlign\n                  key={index}\n                  textAligns={textAligns}\n                  {...commonProps}\n                />\n              )\n            } else if (controlItem.type === 'media') {\n              if (!media.image && !media.video && !media.audio) {\n                return null\n              }\n              return (\n                <button\n                  type=\"button\"\n                  key={index}\n                  title={controlItem.title}\n                  className='control-item button'\n                  onClick={this.openMediaLibrary}\n                >\n                  {controlItem.text}\n                </button>\n              )\n            } else {\n              let buttonClassName = this.getControlItemClassName({\n                type: controlItem.type,\n                command: controlItem.command\n              })\n              return (\n                <button\n                  type=\"button\"\n                  key={index}\n                  title={controlItem.title}\n                  className={buttonClassName}\n                  onClick={() => this.applyControl(controlItem.command, controlItem.type)}\n                >\n                  {controlItem.text}\n                </button>\n              )\n            }\n          })\n        }\n        {renderedExtendControls}\n      </div>\n    )\n\n  }\n\n}","import React from 'react'\n\nfunction handleStrategy (contentBlock, callback, contentState) {\n\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity()\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === 'LINK'\n    )\n  }, callback)\n\n}\n\nconst Link = (props) => {\n\n  const { children, entityKey, contentState } = props\n  const { href, target } = contentState.getEntity(entityKey).getData()\n\n  return (\n    <span className=\"braft-link-wrap\">\n      <a onClick={(event) => viewLink(event, href)} className=\"braft-link\" href={href} target={target}>{children}</a>\n    </span>\n  )\n\n}\n\nconst viewLink = (event, link) => {\n  if (event.getModifierState('Shift')) {\n    const tempLink = document.createElement('a')\n    tempLink.href = link\n    tempLink.target = '_blank'\n    tempLink.click()\n  }\n}\n\nexport default {\n  strategy: handleStrategy,\n  component: Link\n}","import Link from './Link'\n\nexport default [Link]","export default (props, customStyles = {}) => {\n\n  const colorStyles = {}\n  const bgColorStyles = {}\n  const fontSizeStyles = {}\n  const fontFamilyStyles = {}\n  const lineHeightStyles = {}\n  const letterSpacingtStyles = {}\n  const indentStyles = {}\n\n  props.colors.forEach((color) => {\n    let color_id = color.replace('#', '').toUpperCase()\n    colorStyles['COLOR-' + color_id] = { color }\n    bgColorStyles['BGCOLOR-' + color_id] = { backgroundColor: color }\n  })\n\n  props.fontSizes.forEach((fontSize) => {\n    fontSizeStyles['FONTSIZE-' + fontSize] = { fontSize: fontSize }\n  })\n\n  props.fontFamilies.forEach((fontFamily) => {\n    fontFamilyStyles['FONTFAMILY-' + fontFamily.name.toUpperCase()] = {\n      fontFamily: fontFamily.family\n    }\n  })\n\n  props.lineHeights.forEach((lineHeight) => {\n    lineHeightStyles['LINEHEIGHT-' + lineHeight] = { lineHeight: lineHeight }\n  })\n\n  props.letterSpacings.forEach((letterSpacing) => {\n    letterSpacingtStyles['LETTERSPACING-' + letterSpacing] = { letterSpacing: letterSpacing }\n  })\n  props.textIndents.forEach((indent) => {\n    indentStyles['INDENT-' + indent] = { paddingLeft: indent, paddingRight: indent}\n  })\n  \n  return {\n    'SUPERSCRIPT': {\n      position: 'relative',\n      top: '-8px',\n      fontSize: '11px'\n    },\n    'SUBSCRIPT': {\n      position: 'relative',\n      bottom: '-8px',\n      fontSize: '11px'\n    },\n    ...colorStyles,\n    ...bgColorStyles,\n    ...fontSizeStyles,\n    ...fontFamilyStyles,\n    ...lineHeightStyles,\n    ...letterSpacingtStyles,\n    ...indentStyles,\n    ...customStyles\n  }\n\n}","export default (customBlockStyleFn) => (block) => {\n\n  const blockAlignment = block.getData() && block.getData().get('textAlign')\n  const blockFloat = block.getData() && block.getData().get('float')\n\n  let result = ''\n\n  if (blockAlignment) {\n    result = `braft-${blockAlignment}-aligned-block`\n  }\n\n  if (blockFloat) {\n    result += ` braft-float-${blockFloat}`\n  }\n\n  if (customBlockStyleFn) {\n    result += customBlockStyleFn(block)\n  }\n\n  return result\n\n}","import React from 'react'\nimport { ContentUtils } from 'braft-utils'\nimport './style.scss'\n\nexport default class HorizontalLine extends React.Component {\n\n  render () {\n\n    return (\n      <div className=\"braft-horizontal-line\">\n        <div className=\"braft-horizontal-line-toolbar\">\n          <a onClick={this.removeHorizontalLine}>&#xe9ac;</a>\n        </div>\n      </div>\n    )\n\n  }\n\n  removeHorizontalLine = () => {\n    this.props.editor.setValue(ContentUtils.removeBlock(this.props.editorState, this.props.block))\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport { showModal } from 'components/common/Modal'\nimport { ContentUtils } from 'braft-utils'\n\nexport default class Embed extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-video-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        <i className=\"braft-icon-code\"></i>\n        <h5>{name}</h5>\n        <h6>{url}</h6>\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-video-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeEmbed}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    const { url } = this.props.mediaData\n\n    this.playerModal = showModal({\n      title: this.props.language.videoPlayer.embedTitle,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      children: <div className=\"braft-embed-media-player\" dangerouslySetInnerHTML={{ __html: url}}/>\n    })\n\n  }\n\n  removeEmbed = () => {\n    this.props.editor.setValue(ContentUtils.removeBlock(this.props.editorState, this.props.block))\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport { ContentUtils } from 'braft-utils'\nimport { showModal } from 'components/common/Modal'\n\nexport default class Audio extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-audio-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        <i className=\"braft-icon-music\"></i>\n        <h5>{name}</h5>\n        <h6>{url}</h6>\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-audio-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeAudio}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    this.playerModal = showModal({\n      title: this.props.language.audioPlayer.title,\n      width: 480,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      onConfirm: this.handlePlayerClose,\n      children: <audio className=\"braft-embed-audio-player\" src={this.props.mediaData.url} controls/>\n    })\n\n  }\n\n  removeAudio = () => {\n    this.props.editor.setValue(ContentUtils.removeBlock(this.props.editorState, this.props.block))\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.playerModal = null\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__29__;","import './style.scss'\nimport React from 'react'\nimport { ContentUtils } from 'braft-utils'\nimport { showModal } from 'components/common/Modal'\n\nexport default class Video extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name, meta } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-video-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        {meta && meta.poster ? (\n          <img className=\"braft-media-video-poster\" src={meta.poster}/>\n        ) : (\n          <div>\n            <i className=\"braft-icon-film\"></i>\n            <h5>{name}</h5>\n            <h6>{url}</h6>\n          </div>\n        )}\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-video-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeVideo}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    const { url, meta } = this.props.mediaData\n\n    this.playerModal = showModal({\n      title: this.props.language.videoPlayer.title,\n      width: 480,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      children: <video poster={meta && meta.poster ? meta.poster : ''} className=\"braft-embed-video-player\" src={url} controls/>\n    })\n\n  }\n\n  removeVideo = () => {\n    this.props.editor.setValue(ContentUtils.removeBlock(this.props.editorState, this.props.block))\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport { ContentUtils } from 'braft-utils'\nimport Switch from 'components/common/Switch'\nimport { imageControlItems } from 'configs/controls'\n\nexport default class Image extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    toolbarOffset: 0,\n    linkEditorVisible: false,\n    sizeEditorVisible: false,\n    tempLink: null,\n    tempWidth: null,\n    tempHeight: null\n  }\n\n  render () {\n\n    const { mediaData, language, imageControls } = this.props\n    const { toolbarVisible, toolbarOffset, linkEditorVisible, sizeEditorVisible } = this.state\n    const blockData = this.props.block.getData()\n\n    let float = blockData.get('float')\n    let alignment = blockData.get('alignment')\n    let { url, link, link_target, width, height } = mediaData\n    let imageStyles = {}\n    let clearFix = false\n\n    if (float) {\n      alignment = null\n    } else if (alignment === 'left') {\n      imageStyles.float = 'left'\n      clearFix = true\n    } else if (alignment === 'right') {\n      imageStyles.float = 'right'\n      clearFix = true\n    } else if (alignment === 'center') {\n      imageStyles.textAlign = \"center\"\n    } else {\n      imageStyles.float = 'left'\n      clearFix = true\n    }\n\n    const renderedControlItems = imageControls.map((item, index) => {\n\n      if (typeof item === 'string' && imageControlItems[item]) {\n        return (\n          <a className={item === 'link' && link ? 'active' : ''} key={index} href=\"javascript:void(0);\" onClick={() => this.executeCommand(imageControlItems[item].command)}>\n            {imageControlItems[item].text}\n          </a>\n        )\n      } else if (item && item.onClick && item.text) {\n        return (\n          <a key={index} href=\"javascript:void(0);\" onClick={() => this.executeCommand(item.onClick)}>\n            {item.text}\n          </a>\n        )\n      } else {\n        return null\n      }\n\n    })\n\n    return (\n      <div className=\"braft-media-embeder braft-image-embeder\">\n        <div\n          style={imageStyles}\n          draggable={true}\n          onMouseEnter={this.showToolbar}\n          onMouseMove={this.showToolbar}\n          onMouseLeave={this.hideToolbar}\n          onDragStart={this.handleDragStart}\n          onDragEnd={this.handleDragEnd}\n          ref={instance => this.mediaEmbederInstance = instance}\n          className=\"braft-embed-image\"\n        >\n          {toolbarVisible ? (\n            <div\n              style={{marginLeft: toolbarOffset}}\n              ref={instance => this.toolbarElement = instance}\n              data-float={float}\n              data-align={alignment}\n              className=\"braft-embed-image-toolbar\"\n            >\n              {linkEditorVisible ? (\n                <div className=\"braft-embed-image-link-editor\">\n                  <div className=\"editor-input-group\">\n                    <input type=\"text\" placeholder={language.linkEditor.inputWithEnterPlaceHolder} onKeyDown={this.handleLinkInputKeyDown} onChange={this.setImageLink} defaultValue={link}/>\n                    <button type=\"button\" onClick={this.confirmImageLink}>{language.base.confirm}</button>\n                  </div>\n                  <div className=\"switch-group\">\n                    <Switch\n                      active={link_target === '_blank'}\n                      onClick={() => this.setImageLinkTarget(link_target)}\n                    />\n                    <label>{language.linkEditor.openInNewWindow}</label>\n                  </div>\n                </div>\n              ) : null}\n              {sizeEditorVisible ? (\n                <div className=\"braft-embed-image-size-editor\">\n                  <div className=\"editor-input-group\">\n                    <input type=\"text\" placeholder={language.base.width} onKeyDown={this.handleSizeInputKeyDown} onChange={this.setImageWidth} defaultValue={width}/>\n                    <input type=\"text\" placeholder={language.base.height} onKeyDown={this.handleSizeInputKeyDown} onChange={this.setImageHeight} defaultValue={height}/>\n                    <button type=\"button\" onClick={this.confirmImageSize}>{language.base.confirm}</button>\n                  </div>\n                </div>\n              ) : null}\n              {renderedControlItems}\n              <i style={{marginLeft: toolbarOffset * -1}} className=\"braft-embed-image-toolbar-arrow\"></i>\n            </div>\n          ) : null}\n          <img\n            ref={instance => this.imageElement = instance}\n            src={url} style={{width, height}} width={width} height={height}\n          />\n        </div>\n        {clearFix && <div className=\"clearfix\" style={{clear:'both',height:0,lineHeight:0,float:'none'}}></div>}\n      </div>\n    )\n\n  }\n\n  calcToolbarOffset () {\n\n    const viewRect = this.props.containerNode.getBoundingClientRect()\n    const toolbarRect = this.toolbarElement.getBoundingClientRect()\n    const imageRect = this.imageElement.getBoundingClientRect()\n\n    const right = viewRect.right - (imageRect.right - imageRect.width / 2 + toolbarRect.width / 2)\n    const left = (imageRect.left + imageRect.width / 2 - toolbarRect.width / 2) - viewRect.left\n\n    if (right < 10) {\n      return right - 10\n    } else if (left < 10) {\n      return left * -1 + 10\n    } else {\n      return 0\n    }\n\n  }\n\n  handleDragStart = (event) => {\n\n    window.__BRAFT_DRAGING__IMAGE__ = {\n      block: this.props.block,\n      mediaData: {\n        type: 'IMAGE',\n        ...this.props.mediaData\n      }\n    }\n\n    this.setState({\n      toolbarVisible: false\n    }, () => {\n      this.props.editor.setDraftProps({ readOnly: false })\n    })\n\n    return true\n\n  }\n\n  handleDragEnd = (event) => {\n\n    window.__BRAFT_DRAGING__IMAGE__ = null\n    return false\n\n  }\n\n  executeCommand = (command) => {\n    if (typeof command === 'string') {\n      const [method, param] = command.split('|')\n      this[method] && this[method](param)\n    } else if (typeof command === 'function') {\n      command(this.props.block, this.props.editorState)\n    }\n  }\n\n  removeImage = () => {\n    this.props.editor.setValue(ContentUtils.removeBlock(this.props.editorState, this.props.block))\n    this.props.editor.setDraftProps({ readOnly: false })\n  }\n\n  toggleLinkEditor = () => {\n    this.setState({\n      linkEditorVisible: !this.state.linkEditorVisible,\n      sizeEditorVisible: false\n    })\n  }\n\n  toggleSizeEditor = () => {\n    this.setState({\n      linkEditorVisible: false,\n      sizeEditorVisible: !this.state.sizeEditorVisible\n    })\n  }\n\n  handleLinkInputKeyDown = (e) => {\n\n    if (e.keyCode === 13) {\n      this.confirmImageLink()\n    } else {\n      return\n    }\n\n  }\n\n  setImageLink = (e) => {\n    this.setState({ tempLink: e.currentTarget.value })\n    return\n  }\n\n  setImageLinkTarget (link_target) {\n\n    link_target = link_target === '_blank' ? '' : '_blank'\n    this.props.editor.setValue(ContentUtils.setMediaData(this.props.editorState, this.props.entityKey, { link_target }))\n    window.setImmediate(this.props.editor.forceRender)\n\n  }\n\n  confirmImageLink = () => {\n\n    const { tempLink: link } = this.state\n\n    if (link !== null) {\n      this.props.editor.setValue(ContentUtils.setMediaData(this.props.editorState, this.props.entityKey, { link }))\n      window.setImmediate(this.props.editor.forceRender)\n    }\n\n  }\n\n  handleSizeInputKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      this.confirmImageSize()\n    } else {\n      return\n    }\n  }\n\n  setImageWidth = ({ currentTarget }) => {\n\n    let { value } = currentTarget\n\n    value && !isNaN(value) && (value = value + 'px')\n\n    this.setState({\n      tempWidth: value\n    })\n\n    return\n\n  }\n\n  setImageHeight = ({ currentTarget }) => {\n\n    let { value } = currentTarget\n\n    value && !isNaN(value) && (value = value + 'px')\n\n    this.setState({\n      tempHeight: value\n    })\n\n    return\n\n  }\n\n  confirmImageSize = () => {\n\n    const { tempWidth: width, tempHeight: height } = this.state\n    const newImageSize = {}\n\n    width !== null && (newImageSize.width = width);\n    height !== null && (newImageSize.height = height);\n\n    this.props.editor.setValue(ContentUtils.setMediaData(this.props.editorState, this.props.entityKey, newImageSize))\n    window.setImmediate(this.props.editor.forceRender)\n\n  }\n\n  setImageFloat = (float) => {\n    this.props.editor.setValue(ContentUtils.setMediaPosition(this.props.editorState, this.props.block, { float }))\n    this.props.editor.setDraftProps({ readOnly: false })\n  }\n\n  setImageAlignment = (alignment) => {\n    this.props.editor.setValue(ContentUtils.setMediaPosition(this.props.editorState, this.props.block, { alignment }))\n    this.props.editor.setDraftProps({ readOnly: false })\n  }\n\n  showToolbar = (event) => {\n\n    event.preventDefault()\n\n    if (!this.state.toolbarVisible) {\n      this.setState({\n        toolbarVisible: true\n      }, () => {\n        this.props.editor.setDraftProps({ readOnly: true })\n        this.setState({ toolbarOffset: this.calcToolbarOffset() })\n      })\n    }\n\n  }\n\n  hideToolbar = (event) => {\n\n    event.preventDefault()\n\n    this.setState({\n      toolbarVisible: false\n    }, () => {\n      this.props.editor.setDraftProps({ readOnly: false })\n    })\n\n  }\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__32__;","import React from 'react'\nimport { Map } from 'immutable'\nimport { DefaultDraftBlockRenderMap } from 'draft-js'\nimport Image from './atomics/Image'\nimport Video from './atomics/Video'\nimport Audio from './atomics/Audio'\nimport Embed from './atomics/Embed'\nimport HorizontalLine from './atomics/HorizontalLine'\nimport _getBlockStyleFn from './styles/blockStyles'\nimport _getCustomStyleMap from './styles/inlineStyles'\nimport _decorators from './decorators'\n\nconst getAtomicBlockComponent = (block, superProps) => (props) => {\n\n  const entityKey = props.block.getEntityAt(0)\n\n  if (!entityKey) {\n    return null\n  }\n\n  const entity = props.contentState.getEntity(entityKey)\n  const mediaData = entity.getData()\n  const mediaType = entity.getType()\n  const mediaProps = {\n    ...superProps,\n    block, mediaData, entityKey\n  }\n\n  if (mediaType === 'IMAGE') {\n    return <Image { ...mediaProps } />\n  } else if (mediaType === 'AUDIO') {\n    return <Audio { ...mediaProps } />\n  } else if (mediaType === 'VIDEO') {\n    return <Video { ...mediaProps } />\n  } else if (mediaType === 'EMBED') {\n    return <Embed { ...mediaProps } />\n  } else if (mediaType === 'HR') {\n    return <HorizontalLine { ...mediaProps } />\n  }\n\n  if (superProps.extendAtomics) {\n    const atomics = superProps.extendAtomics;\n    for (let i = 0; i < atomics.length; i++) {\n      if (mediaType === atomics[i].type) {\n        const Component = atomics[i].component;\n        return <Component {...mediaProps} />\n      }\n    }\n  }\n\n  return null\n\n}\n\nexport const getBlockRendererFn = (props, customBlockRendererFn) => (block) => {\n\n  let blockRenderer = null\n\n  if (block.getType() === 'atomic') {\n\n    blockRenderer = {\n      component: getAtomicBlockComponent(block, props),\n      editable: false\n    }\n\n  } else if (customBlockRendererFn) {\n    blockRenderer = customBlockRendererFn(block) || null\n  }\n\n  return blockRenderer\n\n}\n\nexport const customBlockRenderMap = Map({\n  'atomic': {\n    element: ''\n  },\n  'code-block': {\n    element: 'code',\n    wrapper: DefaultDraftBlockRenderMap.get('code-block').wrapper\n  }\n})\n\nexport const getBlockStyleFn = _getBlockStyleFn\nexport const getCustomStyleMap = _getCustomStyleMap\nexport const decorators = _decorators","export default {\n  height: 500,\n  language: 'zh',\n  controls: [\n    'undo', 'redo', 'separator',\n    'font-size', 'font-family', 'line-height', 'letter-spacing', 'separator',\n    'text-indent','text-color', 'bold', 'italic', 'underline', 'strike-through', 'separator',\n    'superscript', 'subscript', 'remove-styles', 'emoji', 'text-align', 'separator',\n    'headings', 'list_ul', 'list_ol', 'blockquote', 'code', 'separator',\n    'link', 'split', 'hr', 'separator',\n    'media', 'separator',\n    'clear'\n  ],\n  excludeControls: [],\n  extendControls: [],\n  extendAtomics: [],\n  componentBelowControlBar: null,\n  media: {\n    pasteImage: true,\n    image: true,\n    video: true,\n    audio: true,\n    uploadFn: null,\n    validateFn: null,\n    onBeforeDeselect: null,\n    onDeselect: null,\n    onBeforeSelect: null,\n    onSelect: null,\n    onBeforeRemove: null,\n    onRemove: null,\n    onCancel: null,\n    onFileSelect: null,\n    onBeforeInsert: null,\n    onInsert: null,\n    onChange: null,\n    externals: {\n      audio: true,\n      video: true,\n      image: true,\n      embed: true\n    },\n  },\n  imageControls: [\n    'float-left', 'float-right',\n    'align-left', 'align-center', 'align-right',\n    'link', 'size', 'remove'\n  ],\n  colors: [\n    '#000000', '#333333', '#666666', '#999999', '#cccccc', '#ffffff',\n    '#61a951', '#16a085', '#07a9fe', '#003ba5', '#8e44ad', '#f32784',\n    '#c0392b', '#d35400', '#f39c12', '#fdda00', '#7f8c8d', '#2c3e50'\n  ],\n  tabIndents: 2,\n  textAligns: ['left', 'center', 'right', 'justify'],\n  textBackgroundColor: true,\n  letterSpacings: [0, 1, 2, 3, 4, 5, 6],\n  textIndents: [0, 14, 21, 28],\n  lineHeights: [\n    '1', '1.2', '1.5', '1.75', '2', '2.5', '3', '4'\n  ],\n  fontSizes: [\n    12, 14, 16, 18, 20, 24,\n    28, 30, 32, 36, 40, 48,\n    56, 64, 72, 96, 120, 144\n  ],\n  fontFamilies: [{\n    name: 'Araial',\n    family: 'Arial, Helvetica, sans-serif'\n  }, {\n    name: 'Georgia',\n    family: 'Georgia, serif'\n  }, {\n    name: 'Impact',\n    family: 'Impact, serif'\n  }, {\n    name: 'Monospace',\n    family: '\"Courier New\", Courier, monospace'\n  }, {\n    name: 'Tahoma',\n    family: \"tahoma, arial, 'Hiragino Sans GB', 宋体, sans-serif\"\n  }],\n  emojis: [\n    \"🤣\", \"🙌\", \"💚\", \"💛\", \"👏\", \"😉\", \"💯\",\n    \"💕\", \"💞\", \"💘\", \"💙\", \"💝\", \"🖤\", \"💜\",\n    \"❤️\", \"😍\", \"😻\", \"💓\", \"💗\", \"😋\", \"😇\",\n    \"😂\", \"😹\", \"😘\", \"💖\", \"😁\", \"😀\", \"🤞\",\n    \"😲\", \"😄\", \"😊\", \"👍\", \"😌\", \"😃\", \"😅\",\n    \"✌️\", \"🤗\", \"💋\", \"😗\", \"😽\", \"😚\", \"🤠\",\n    \"😙\", \"😺\", \"👄\", \"😸\", \"😏\", \"😼\", \"👌\",\n    \"😎\", \"😆\", \"😛\", \"🙏\", \"🤝\", \"🙂\", \"🤑\",\n    \"😝\", \"😐\", \"😑\", \"🤤\", \"😤\", \"🙃\", \"🤡\",\n    \"😶\", \"😪\", \"😴\", \"😵\", \"😓\", \"👊\", \"😦\",\n    \"😷\", \"🤐\", \"😜\", \"🤓\", \"👻\", \"😥\", \"🙄\",\n    \"🤔\", \"🤒\", \"🙁\", \"😔\", \"😯\", \"☹️\", \"☠️\",\n    \"😰\", \"😩\", \"😖\", \"😕\", \"😒\", \"😣\", \"😢\",\n    \"😮\", \"😿\", \"🤧\", \"😫\", \"🤥\", \"😞\", \"😬\",\n    \"👎\", \"💀\", \"😳\", \"😨\", \"🤕\", \"🤢\", \"😱\",\n    \"😭\", \"😠\", \"😈\", \"😧\", \"💔\", \"😟\", \"🙀\",\n    \"💩\", \"👿\", \"😡\", \"😾\", \"🖕\"\n  ],\n  draftProps: {},\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  onSave: null\n}","import { getDefaultKeyBinding, KeyBindingUtil } from 'draft-js'\n\n// TODO\n// 允许自定义的快捷键设置\n\nexport default (customKeyBindingFn) => (event) => {\n\n  if (event.keyCode === 83 && (KeyBindingUtil.hasCommandModifier(event) || KeyBindingUtil.isCtrlKeyCommand(event))) {\n    return 'braft-save'\n  }\n\n  if (customKeyBindingFn) {\n    return customKeyBindingFn(event) || getDefaultKeyBinding(event)\n  }\n\n  return getDefaultKeyBinding(event)\n\n}\n","export default {\n  base: {\n    remove: '刪除',\n    cancel: '取消',\n    confirm: '確定',\n    inert: '插入',\n    width: '宽度',\n    height: '高度'\n  },\n  controls: {\n    clear: '清除内容',\n    undo: '撤銷',\n    redo: '重做',\n    fontSize: '字號',\n    color: '顏色',\n    textColor: '文字顏色',\n    backgroundColor: '背景顏色',\n    tempColors: '臨時顏色',\n    bold: '加粗',\n    lineHeight: '行高',\n    letterSpacing: '字間距',\n    textIndent: '兩端縮進',\n    border: '邊框',\n    italic: '斜體',\n    underline: '下劃線',\n    strikeThrough: '刪除線',\n    fontFamily: '字體',\n    textAlign: '文本對齊',\n    alignLeft: '居左',\n    alignCenter: '居中',\n    alignRight: '居右',\n    alignJustify: '兩端對齊',\n    floatLeft: '左浮動',\n    floatRight: '右浮動',\n    superScript: '上標',\n    subScript: '下標',\n    removeStyles: '清除样式',\n    headings: '標題',\n    header: '標題',\n    normal: '常規',\n    orderedList: '有序列表',\n    unorderedList: '無序列表',\n    blockQuote: '引用',\n    code: '代碼',\n    link: '鏈接',\n    unlink: '清除鏈接',\n    hr: '水平线',\n    media: '媒體',\n    mediaLibirary: '媒體库',\n    emoji: '小表情'\n  },\n  linkEditor: {\n    inputPlaceHolder: '輸入鏈接地址',\n    inputWithEnterPlaceHolder: '輸入鏈接地址並回車',\n    openInNewWindow: '在新窗口打開',\n    removeLink: '移除鏈接'\n  },\n  audioPlayer: {\n    title: '播放音頻文件'\n  },\n  videoPlayer: {\n    title: '播放視頻文件',\n    embedTitle: '嵌入式媒體'\n  },\n  media: {\n    image: '圖像',\n    video: '視頻',\n    audio: '音頻',\n    embed: '嵌入式媒體'\n  }\n}","export default {\n  base: {\n    remove: '删除',\n    cancel: '取消',\n    confirm: '确定',\n    inert: '插入',\n    width: '宽度',\n    height: '高度'\n  },\n  controls: {\n    clear: '清除内容',\n    undo: '撤销',\n    redo: '重做',\n    fontSize: '字号',\n    lineHeight: '行高',\n    letterSpacing: '字间距',\n    textIndent: '两端缩进',\n    border: '边框',\n    color: '颜色',\n    textColor: '文字颜色',\n    backgroundColor: '背景颜色',\n    tempColors: '临时颜色',\n    bold: '加粗',\n    italic: '斜体',\n    underline: '下划线',\n    strikeThrough: '删除线',\n    fontFamily: '字体',\n    textAlign: '文本对齐',\n    alignLeft: '居左',\n    alignCenter: '居中',\n    alignRight: '居右',\n    alignJustify: '两端',\n    floatLeft: '左浮动',\n    floatRight: '右浮动',\n    superScript: '上标',\n    subScript: '下标',\n    removeStyles: '清除样式',\n    headings: '标题',\n    header: '标题',\n    normal: '常规',\n    orderedList: '有序列表',\n    unorderedList: '无序列表',\n    blockQuote: '引用',\n    code: '代码',\n    link: '链接',\n    unlink: '清除链接',\n    hr: '水平线',\n    media: '媒体',\n    mediaLibirary: '媒体库',\n    emoji: '小表情'\n  },\n  linkEditor: {\n    inputPlaceHolder: '输入链接地址',\n    inputWithEnterPlaceHolder: '输入链接地址并回车',\n    openInNewWindow: '在新窗口打开',\n    removeLink: '移除链接'\n  },\n  audioPlayer: {\n    title: '播放音频文件'\n  },\n  videoPlayer: {\n    title: '播放视频文件',\n    embedTitle: '嵌入式媒体'\n  },\n  media: {\n    image: '图像',\n    video: '视频',\n    audio: '音频',\n    embed: '嵌入式媒体'\n  }\n}","export default {\n  base: {\n    remove: 'Remove',\n    cancel: 'Cancel',\n    confirm: 'Confirm',\n    inert: 'Insert',\n    width: 'Width',\n    height: 'Height'\n  },\n  controls: {\n    clear: 'Clear',\n    undo: 'Undo',\n    redo: 'Redo',\n    fontSize: 'Font Size',\n    color: 'Color',\n    textColor: 'Text',\n    tempColors: 'Temp Colors',\n    backgroundColor: 'Background',\n    bold: 'Bold',\n    lineHeight:'Line Height',\n    letterSpacing:'Letter Spacing',\n    textIndent:'Indent at both ends',\n    italic: 'Italic',\n    underline: 'Underline',\n    strikeThrough: 'Strike Through',\n    fontFamily: 'Font Family',\n    textAlign: 'Text Alignment',\n    alignLeft: 'Left Alignment',\n    alignCenter: 'Center Alignment',\n    alignRight: 'Right Alignment',\n    alignJustify: 'Justify Alignment',\n    floatLeft: 'Left Float',\n    floatRight: 'Right Float',\n    superScript: 'Super Script',\n    subScript: 'Sub Script',\n    removeStyles: 'Remove Styles',\n    headings: 'Headings',\n    header: 'Header',\n    normal: 'Normal',\n    orderedList: 'Ordered List',\n    unorderedList: 'Unordered List',\n    blockQuote: 'Quote',\n    code: 'Code',\n    link: 'Link',\n    unlink: 'Unlink',\n    hr: 'Horizontal Line',\n    media: 'Media',\n    mediaLibirary: 'Media Libirary',\n    emoji: 'Emoji'\n  },\n  linkEditor: {\n    inputPlaceHolder: 'Input link URL',\n    inputWithEnterPlaceHolder: 'Input link URL and press Enter',\n    openInNewWindow: 'Open in new window',\n    removeLink: 'Remove Link'\n  },\n  audioPlayer: {\n    title: 'Play Audio'\n  },\n  videoPlayer: {\n    title: 'Play Video',\n    embedTitle: 'Embed Media'\n  },\n  media: {\n    image: 'Image',\n    video: 'Video',\n    audio: 'Audio',\n    embed: 'Embed'\n  }\n}","import en from './en'\nimport zh from './zh'\nimport zhHant from './zh-hant'\n\nexport default {\n  \"en\": en,\n  \"zh\": zh,\n  \"zh-hant\": zhHant\n}","import 'draft-js/dist/Draft.css'\nimport 'assets/scss/_base.scss'\nimport React from 'react'\nimport languages from 'languages'\nimport { ColorUtils, ContentUtils } from 'braft-utils'\nimport { CompositeDecorator, DefaultDraftBlockRenderMap, Editor } from 'draft-js'\nimport getKeyBindingFn from 'configs/keybindings'\nimport defaultProps from 'configs/props'\nimport { getBlockRendererFn, customBlockRenderMap, getBlockStyleFn, getCustomStyleMap, decorators } from 'renderers'\nimport ControlBar from 'components/business/ControlBar'\n\nconst editorDecorators = new CompositeDecorator(decorators)\n\nexport default class BraftEditor extends React.Component {\n\n  static defaultProps = defaultProps\n\n  constructor (props) {\n\n    super(props)\n\n    this.isFocused = false\n    this.keyBindingFn = getKeyBindingFn(props.customKeyBindingFn)\n    this.blockStyleFn = getBlockStyleFn(props.blockStyleFn)\n    this.blockRenderMap = DefaultDraftBlockRenderMap.merge(customBlockRenderMap)\n\n    if (props.blockRenderMapFn) {\n      this.blockRenderMap = props.blockRenderMapFn(this.blockRenderMap)\n    }\n\n    this.braftFinder = null\n\n    this.state = {\n      containerNode: null,\n      tempColors: [],\n      editorState: ContentUtils.createEmptyEditorState(editorDecorators),\n      draftProps: {}\n    }\n\n  }\n\n  componentWillMount () {\n\n    if (this.props.controls.indexOf('media') !== -1) {\n      require.ensure(['braft-finder'], () => {\n        const BraftFinder = require('braft-finder').default\n        this.braftFinder = new BraftFinder({\n          language: this.props.language,\n          uploadFn: this.props.media.uploadFn,\n          validateFn: this.props.media.validateFn\n        })\n        this.forceUpdate()\n      }, 'braft-finder')\n    }\n\n  }\n\n  componentDidMount () {\n\n    const { value: editorState } = this.props\n\n    if (ContentUtils.isEditorState(editorState)) {\n      this.setState({ editorState })\n    } else if (editorState) {\n      console.warn('')\n    }\n\n    document.addEventListener(\"selectionchange\", this.draftInstance._onSelect)\n\n  }\n\n  componentWillUnmount () {\n\n    document.removeEventListener(\"selectionchange\", this.draftInstance._onSelect)\n\n  }\n\n  componentWillReceiveProps (nextProps) {\n\n    const { value: editorState } = nextProps\n\n    if (ContentUtils.isEditorState(editorState)) {\n      this.setState({ editorState })\n    } else if (editorState) {\n      console.warn('')\n    }\n\n  }\n\n  onChange = (editorState) => {\n    this.setState({ editorState }, () => {\n      this.props.onChange && this.props.onChange(editorState)\n    })\n  }\n\n  getDraftInstance = () => {\n    return this.draftInstance\n  }\n\n  getFinderInstance = () => {\n    return this.braftFinder\n  }\n\n  getValue = () => {\n    return this.state.editorState\n  }\n\n  setValue = (editorState) => {\n    return this.onChange(editorState)\n  }\n\n  forceRender = () => {\n    return this.setValue(ContentUtils.createEditorState(this.state.editorState.getCurrentContent(), editorDecorators))\n  }\n\n  onTab = (event) => {\n\n    if (ContentUtils.getSelectionBlockType(this.state.editorState) === 'code-block') {\n      this.insertText(' '.repeat(this.props.tabIndents), false)\n      event.preventDefault()\n      return false\n    }\n\n    this.props.onTab && this.props.onTab(event)\n\n  }\n\n  onFocus = () => {\n    this.isFocused = true\n    this.props.onFocus && this.props.onFocus()\n  }\n\n  onBlur = () => {\n    this.isFocused = false\n    this.props.onBlur && this.props.onBlur()\n  }\n\n  requestFocus = () => {\n    setTimeout(() => this.draftInstance.focus(), 0)\n  }\n\n  handleKeyCommand = (command) => {\n\n    if (command === 'braft-save') {\n      this.props.onSave && this.props.onSave()\n      return 'handled'\n    }\n\n    const nextEditorState = ContentUtils.handleKeyCommand(this.state.editorState, command)\n\n    if (nextEditorState) {\n      this.setValue(nextEditorState)\n      return 'handled'\n    }\n\n    return 'not-handled'\n\n  }\n\n  handleReturn = (event) => {\n\n    const currentBlock = ContentUtils.getSelectionBlock(this.state.editorState)\n    const currentBlockType = currentBlock.getType()\n\n    if (currentBlockType === 'unordered-list-item' || currentBlockType === 'ordered-list-item') {\n\n      if (currentBlock.getLength() === 0) {\n        this.setValue(ContentUtils.toggleSelectionBlockType(this.state.editorState, 'unstyled'))\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    } else if (currentBlockType === 'code-block') {\n\n      if (\n        event.which === 13 && (\n          event.getModifierState('Shift') ||\n          event.getModifierState('Alt') ||\n          event.getModifierState('Control')\n        )) {\n        this.setValue(ContentUtils.toggleSelectionBlockType(this.state.editorState, 'unstyled'))\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    } else {\n\n      const nextEditorState = ContentUtils.handleNewLine(this.state.editorState, event)\n\n      if (nextEditorState) {\n        this.setValue(nextEditorState)\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    }\n\n    return false\n\n  }\n\n  handleDrop = (selectionState, dataTransfer, isInternal) => {\n\n    if (window && window.__BRAFT_DRAGING__IMAGE__) {\n\n      let editorState = ContentUtils.removeBlock(this.state.editorState, window.__BRAFT_DRAGING__IMAGE__.block, selectionState)\n      editorState = ContentUtils.insertMedias(editorState, [window.__BRAFT_DRAGING__IMAGE__.mediaData])\n\n      window.__BRAFT_DRAGING__IMAGE__ = null\n\n      this.setDraftProps({ readOnly: false })\n      this.setValue(editorState)\n\n      return 'handled'\n\n    } else if (!dataTransfer || !dataTransfer.getText()) {\n      return 'handled'\n    }\n\n    return 'not-handled'\n\n  }\n\n  handleDroppedFiles = (selectionState, files) => {\n    return this.resolveFiles(files)\n  }\n\n  handlePastedFiles = (files) => {\n    return this.resolveFiles(files)\n  }\n\n  handlePastedText = (text, htmlString) => {\n\n    if (!htmlString || this.props.stripPastedStyles) {\n      return false\n    }\n\n    const tempColors = ColorUtils.detectColorsFromHTMLString(htmlString)\n\n    this.setState({\n      tempColors: [...this.state.tempColors, ...tempColors].filter(item => this.props.colors.indexOf(item) === -1).filter((item, index, array) => array.indexOf(item) === index)\n    }, () => {\n      this.setValue(ContentUtils.insertHTML(this.state.editorState, htmlString))\n    })\n\n    return true\n\n  }\n\n  resolveFiles = (files) => {\n\n    if (files[0] && files[0].type.indexOf('image') > -1 && this.props.media && this.props.media.pasteImage) {\n\n      this.braftFinder.uploadImage(files[0], image => {\n        this.setValue(ContentUtils.insertMedias(this.state.editorState, [image]))\n      })\n  \n      return 'handled'\n\n    }\n\n    return 'not-handled'\n\n  }\n\n  undo = () => {\n    this.setValue(ContentUtils.undo(this.state.editorState))\n  }\n\n  redo = () => {\n    this.setValue(ContentUtils.redo(this.state.editorState))\n  }\n\n  removeSelectionInlineStyles = () => {\n    this.setValue(ContentUtils.removeSelectionInlineStyles(this.state.editorState))\n  }\n\n  insertHorizontalLine = () => {\n    this.setValue(ContentUtils.insertHorizontalLine(this.state.editorState))\n  }\n\n  clearEditorContent = () => {\n    this.setValue(ContentUtils.clear(this.state.editorState))\n  }\n\n  render () {\n\n    let {\n      controls, excludeControls, extendControls, disabled, height, media, language, colors,\n      fontSizes, fontFamilies, emojis, placeholder, imageControls, lineHeights, letterSpacings, textIndents, textAligns, textBackgroundColor,\n      extendAtomics, className, stripPastedStyles, componentBelowControlBar\n    } = this.props\n\n    controls = controls.filter(item => excludeControls.indexOf(item) === -1)\n    language = languages[language] || languages[defaultProps.language]\n\n    const externalMedias = media && media.externals ? {\n      ...defaultProps.media.externals,\n      ...media.externals\n    } : defaultProps.media.externals\n\n    media = { ...defaultProps.media, ...media, externalMedias }\n\n    if (!media.uploadFn) {\n      media.video = false\n      media.audio = false\n    }\n\n    const controlBarProps = {\n      editor: this,\n      editorState: this.state.editorState,\n      braftFinder: this.braftFinder,\n      editorHeight: height,\n      ref: instance => this.controlBarInstance = instance,\n      containerNode: this.state.containerNode,\n      colors: [...colors, ...this.state.tempColors],\n      media, controls, language, extendControls, fontSizes, fontFamilies,\n      emojis, lineHeights, letterSpacings, textIndents, textAligns, textBackgroundColor\n    }\n\n    const blockRendererFn = getBlockRendererFn({\n      editor: this,\n      editorState: this.state.editorState,\n      containerNode: this.state.containerNode,\n      imageControls, language, extendAtomics\n    }, this.props.blockRendererFn)\n\n    const customStyleMap = getCustomStyleMap({\n      colors: [...colors, ...this.state.tempColors],\n      fontSizes, fontFamilies, lineHeights, letterSpacings, textIndents\n    }, this.props.customStyleMap)\n\n    const draftProps = {\n      ref: instance => { this.draftInstance = instance },\n      editorState: this.state.editorState,\n      handleKeyCommand: this.handleKeyCommand,\n      handleReturn: this.handleReturn,\n      handleDrop: this.handleDrop,\n      handleDroppedFiles: this.handleDroppedFiles,\n      handlePastedText: this.handlePastedText,\n      handlePastedFiles: this.handlePastedFiles,\n      onChange: this.onChange,\n      onTab: this.onTab,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      readOnly: disabled,\n      blockRenderMap: this.blockRenderMap,\n      blockStyleFn: this.blockStyleFn,\n      keyBindingFn: this.keyBindingFn,\n      customStyleMap, blockRendererFn,\n      placeholder, stripPastedStyles,\n      ...this.props.draftProps,\n      ...this.state.draftProps\n    }\n\n    return (\n      <div ref={this.setEditorContainerNode} className={`BraftEditor-container ${className} ${(disabled ? 'disabled' : '')}`}>\n        <ControlBar {...controlBarProps} />\n        {componentBelowControlBar}\n        <div className=\"BraftEditor-content\" style={height ? { height } : {}}>\n          <Editor {...draftProps} />\n        </div>\n      </div>\n    )\n\n  }\n\n  setDraftProps (draftProps) {\n    this.setState({\n      draftProps: {\n        ...this.state.draftProps,\n        ...draftProps\n      }\n    })\n  }\n\n  setEditorContainerNode = (containerNode) => {\n    this.setState({ containerNode })\n  }\n\n}","import BraftEditor from 'editor'\n\nexport default BraftEditor\n\n// TODO\n// [√]优化内置的图片伪上传功能，用base64代替blob\n// [ ]优化HTML格式无法存储媒体名称的问题\n// [ ]优化音视频在编辑器内的预览体验\n// [√]支持自定义图片工具栏按钮\n// [√]支持通过属性扩展customStyleMap, blockStyleFn, keyBindingFn, blockRendererFn, blockRenderMap等\n// [ ]支持媒体库组件的更多个性化配置（placeholder等）\n// [√]允许完全设置控制栏的按钮（['media', { key: 'blod', text: 'xxx' }）\n// [√]允许在工具栏和内容区域直接插入自定义的组件[componentBelowControlBar]\n// [ ]优化换行与空格\n// --------------\n// [ ]图片剪切功能"],"sourceRoot":""}