{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"braft-utils\"","webpack:///./components/common/DropDown/index.jsx","webpack:///./components/common/Modal/index.jsx","webpack:///external \"draft-js\"","webpack:///./components/common/Switch/index.jsx","webpack:///./components/business/indent/index.jsx","webpack:///./components/business/letterSpacing/index.jsx","webpack:///./components/business/EmojiPicker/index.jsx","webpack:///./components/business/TextAlign/index.jsx","webpack:///./components/business/FontFamily/index.jsx","webpack:///./components/business/LineHeight/index.jsx","webpack:///./components/business/FontSize/index.jsx","webpack:///./components/common/ColorPicker/index.jsx","webpack:///./components/business/TextColor/index.jsx","webpack:///./configs/maps.js","webpack:///./components/business/Headings/index.jsx","webpack:///./helpers/responsive.js","webpack:///./components/business/LinkEditor/index.jsx","webpack:///./configs/controls.js","webpack:///./components/business/ControlBar/index.jsx","webpack:///./renderers/decorators/Link/index.jsx","webpack:///./renderers/decorators/index.js","webpack:///./renderers/styles/inlineStyles.js","webpack:///./renderers/styles/blockStyles.js","webpack:///./renderers/atomics/HorizontalLine/index.jsx","webpack:///./renderers/atomics/Embed/index.jsx","webpack:///./renderers/atomics/Audio/index.jsx","webpack:///external \"react-dom\"","webpack:///./renderers/atomics/Video/index.jsx","webpack:///./renderers/atomics/Image/index.jsx","webpack:///external \"immutable\"","webpack:///./renderers/index.js","webpack:///./configs/props.js","webpack:///./configs/keybindings.js","webpack:///external \"draftjs-utils\"","webpack:///./languages/zh-hant.js","webpack:///./languages/zh.js","webpack:///./languages/en.js","webpack:///./languages/index.js","webpack:///./editor/index.jsx","webpack:///./index.jsx"],"names":["root","factory","exports","module","require","define","amd","a","i","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__28__","__WEBPACK_EXTERNAL_MODULE__31__","__WEBPACK_EXTERNAL_MODULE__35__","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_braftUtils","DropDown","alive","responsiveResolveId","dropDownHandlerElement","dropDownContentElement","componentId","_this","props","BaseUtils","UniqueIndex","state","active","offset","React","Component","_this2","this","fixDropDownPosition","document","body","addEventListener","event","registerClickEvent","ResponsiveHelper","resolve","next","disabled","hide","prevState","_this3","removeEventListener","unresolve","_this4","_state","_props","caption","htmlCaption","hoverTitle","showDropDownArrow","arrowActive","className","children","editorHeight","dropDownContentInnerStyle","isNaN","maxHeight","_react2","default","createElement","id","type","title","data-braft-component-id","dangerouslySetInnerHTML","__html","ref","instance","style","marginLeft","viewRect","viewWrapper","querySelector","getBoundingClientRect","handlerRect","contentRect","right","width","left","setState","autoHide","target","dataset","braftComponentId","keepActive","Modal","_classCallCheck","_possibleConstructorReturn","__proto__","getPrototypeOf","handleTransitionEnd","rootElement","classList","contains","ReactDOM","unmountComponentAtNode","parentNode","removeChild","handleCancel","closeOnCancel","close","onCancel","handleConfirm","closeOnConfirm","onConfirm","unrenderComponent","onClose","BastUtils","UniqueIndexUniqueIndex","visible","renderComponent","activeId","clearImmediate","remove","height","confirmable","showCancel","showConfirm","showClose","cancelText","confirmText","bottomText","language","childComponent","onTransitionEnd","onClick","base","cancel","confirm","appendChild","render","setImmediate","add","defaultProps","header","footer","showModal","host","display","extProps","modalInstance","_extends","destroy","update","currentIndent","indents","find","item","ContentUtils","selectionHasInlineStyle","editorState","_DropDown2","defaultCaption","controls","indent","map","index","data-size","e","editor","setValue","toggleSelectionIndent","currentTarget","size","requestFocus","currentLetterSpacing","letterSpacings","letterSpacing","toggleSelectionLetterSpacing","emoji","emojis","data-emoji","insertText","TextAlign","currentAlignment","undefined","setAlignment","toggleSelectionAlignment","alignment","getSelectionBlockData","textAlignmentTitles","alignLeft","alignCenter","alignRight","alignJustify","textAlignOptions","data-alignment","currentIndex","fontFamilies","fontFamily","data-name","toggleSelectionFontFamily","family","currentLineHeight","lineHeights","lineHeight","toggleSelectionLineHeight","currentFontSize","fontSizes","fontSize","toggleSelectionFontSize","current","colors","onChange","color","data-color","replace","TextColor","colorType","dropDownComponentId","switchColorType","toggleColor","toggleSelectionColor","toggleSelectionBackgroundColor","dropDownComponent","captionStyle","currentColor","forEach","color_id","backgroundColor","disableTextBackgroundColor","data-type","data-keep-active","textColor","_ColorPicker2","disableAlpha","getHeadings","lang","text","command","normal","blocks","header-one","header-two","header-three","header-four","header-fiv","header-six","unstyled","blockquote","_maps","headings","currentHeadingIndex","findIndex","isActive","resizeEventHandlers","responsiveHelperInited","debouce","eventHandler","push","filter","clearTimeout","setTimeout","LinkEditor","href","handeKeyDown","keyCode","preventDefault","inputLink","setTarget","handleUnlink","toggleSelectionLink","_this$state","_ContentUtils$getSele","getSelectionEntityData","textSelected","selectionCollapsed","getSelectionBlockType","link","spellCheck","placeholder","linkEditor","inputPlaceHolder","onKeyDown","_Switch2","openInNewWindow","removeLink","unlink","undo","redo","removeStyles","hr","bold","italic","underline","strikeThrough","superScript","subScript","blockQuote","code","unorderedList","orderedList","textAlign","media","clear","_Modal","ControlBar","mediaPicker","extendedModals","showMediaPicker","extendControls","modal","data","toggleSelectionInlineStyle","toggleSelectionBlockType","_props2","allowSetTextBackgroundColor","currentBlockType","supportedControls","_controls2","commonProps","renderedExtendControls","length","html","component","onCreate","toLowerCase","controlItem","subItem","_Headings2","applyControl","_TextColor2","_FontSize2","_LineHeight2","_letterSpacing2","_indent2","_FontFamily2","_EmojiPicker2","_LinkEditor2","_TextAlign2","image","video","audio","buttonClassName","getControlItemClassName","viewLink","getModifierState","tempLink","click","strategy","contentBlock","callback","contentState","findEntityRanges","character","entityKey","getEntity","getType","_contentState$getEnti","getData","Link","colorStyles","bgColorStyles","fontSizeStyles","fontFamilyStyles","lineHeightStyles","letterSpacingtStyles","indentStyles","toUpperCase","paddingLeft","paddingRight","SUPERSCRIPT","position","top","SUBSCRIPT","bottom","block","blockAlignment","blockFloat","result","HorizontalLine","removeHorizontalLine","removeBlock","Embed","toolbarVisible","playerVisible","showPlayer","url","mediaData","playerModal","videoPlayer","embedTitle","handlePlayerClose","removeEmbed","showToolbar","hideToolbar","onMouseOver","onMouseLeave","toolbarElement","Audio","audioPlayer","src","removeAudio","Video","_this$props$mediaData","meta","poster","removeVideo","Image","toolbarOffset","linkEditorVisible","sizeEditorVisible","tempWidth","tempHeight","handleDragStart","__BRAFT_DRAGING__IMAGE__","setEditorProp","handleDragEnd","removeImage","toggleLinkEditor","toggleSizeEditor","handleLinkInputKeyDown","confirmImageLink","setImageLink","setMediaData","forceRender","handleSizeInputKeyDown","confirmImageSize","setImageWidth","_ref2","setImageHeight","_ref3","newImageSize","setImageFloat","float","setMediaPosition","setImageAlignment","calcToolbarOffset","imageControls","blockData","link_target","imageStyles","clearFix","draggable","onMouseEnter","onMouseMove","onDragStart","onDragEnd","mediaEmbederInstance","data-float","inputWithEnterPlaceHolder","defaultValue","setImageLinkTarget","floatLeft","floatRight","imageElement","toolbarRect","imageRect","_immutable","_draftJs","getBlockRendererFn","superProps","getEntityAt","entity","mediaType","mediaProps","_Image2","_Audio2","_Video2","_Embed2","_HorizontalLine2","extendAtomics","atomics","getAtomicBlockComponent","editable","customBlockRenderMap","Map","atomic","element","code-block","wrapper","DefaultDraftBlockRenderMap","blockStyleFn","_blockStyleFn","getCustomStyleMap","_getCustomStyleMap","decorators","_decorators","excludeControls","tabIndents","forceNewLine","allowPasteImage","uploadFn","sourceFn","onRemove","onInsert","externalMedias","embed","draftProps","onFocus","onBlur","onSave","KeyBindingUtil","hasCommandModifier","isCtrlKeyCommand","getDefaultKeyBinding","inert","tempColors","border","en","zh","zh-hant","zhHant","_draftjsUtils","_renderers","editorDecorators","CompositeDecorator","blockRenderMap","merge","BraftEditor","getDraftInstance","draftInstance","getFinderInstance","braftFinder","getValue","EditorState","createWithContent","getCurrentContent","onTab","repeat","isFocused","focus","handleKeyCommand","nextEditorState","handleReturn","currentBlock","getSelectionBlock","getLength","which","handleNewLine","handleDrop","selectionState","dataTransfer","isInternal","insertMedias","getText","handleDroppedFiles","files","resolveFiles","handlePastedFiles","handlePastedText","htmlString","tmpPasteMode","pasteMode","tmpTextHolder","innerHTML","textContent","innerText","ColorUtils","detectColorsFromHTMLString","concat","_toConsumableArray","indexOf","array","insertHTML","uploadImage","editorIndex","createEmpty","languages","defaultOptions","controlBarProps","controlBarInstance","blockRendererFn","customStyleMap","readOnly","keyBindingFn","_ControlBar2","Editor"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"braft-utils\"), require(\"draft-js\"), require(\"react-dom\"), require(\"immutable\"), require(\"draftjs-utils\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"braft-utils\", \"draft-js\", \"react-dom\", \"immutable\", \"draftjs-utils\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"react\"), require(\"braft-utils\"), require(\"draft-js\"), require(\"react-dom\"), require(\"immutable\"), require(\"draftjs-utils\")) : factory(root[\"react\"], root[\"braft-utils\"], root[\"draft-js\"], root[\"react-dom\"], root[\"immutable\"], root[\"draftjs-utils\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__4__, __WEBPACK_EXTERNAL_MODULE__28__, __WEBPACK_EXTERNAL_MODULE__31__, __WEBPACK_EXTERNAL_MODULE__35__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import './style.scss'\nimport React from 'react'\nimport ResponsiveHelper from 'helpers/responsive'\nimport { BaseUtils } from 'braft-utils'\n\nexport default class DropDown extends React.Component {\n\n  alive = false\n  responsiveResolveId = null\n  dropDownHandlerElement = null\n  dropDownContentElement = null\n  componentId = this.props.componentId || ('BRAFT-DROPDOWN-' + BaseUtils.UniqueIndex())\n  state = {\n    active: false,\n    offset: 0\n  }\n\n  componentDidMount () {\n\n    this.alive = true\n    this.fixDropDownPosition()\n\n    document.body.addEventListener('click', (event) => {\n      this.registerClickEvent(event)\n    })\n\n    this.responsiveResolveId = ResponsiveHelper.resolve(() => {\n      this.fixDropDownPosition()\n    })\n\n  }\n\n  componentWillReceiveProps (next) {\n\n    if (!this.props.disabled && next.disabled) {\n      this.hide()\n    }\n\n  }\n\n  componentDidUpdate (prevState) {\n\n    if (!prevState.active && this.state.active) {\n      this.fixDropDownPosition()\n    }\n\n  }\n\n  componentWillUnmount () {\n\n    document.body.removeEventListener('click', (event) => {\n      this.registerClickEvent(event)\n    })\n\n    this.alive = false\n    ResponsiveHelper.unresolve(this.responsiveResolveId)\n\n  }\n\n  render () {\n\n    let { active, offset } = this.state\n    let { caption, htmlCaption, hoverTitle, disabled, showDropDownArrow, arrowActive, className, children, editorHeight } = this.props\n\n    disabled && (active = false)\n\n    const dropDownContentInnerStyle = !isNaN(editorHeight) && editorHeight > 0 ? {\n      maxHeight: editorHeight - 30 + 'px'\n    } : {}\n\n    return (\n      <div\n        id={this.componentId}\n        className={\"Braft-dropdown \" + (active ? \"active \" : \"\") + (disabled ? \"disabled \" : \"\") + className}\n      >\n        {htmlCaption ? (\n          <button\n            type=\"button\"\n            className=\"dropdown-handler\"\n            title={hoverTitle}\n            data-braft-component-id={this.componentId}\n            dangerouslySetInnerHTML={htmlCaption ? {__html: htmlCaption} : null}\n            ref={(instance) => this.dropDownHandlerElement = instance}\n          ></button>\n        ) : (\n          <button\n            type=\"button\"\n            className=\"dropdown-handler\"\n            title={hoverTitle}\n            data-braft-component-id={this.componentId}\n            ref={(instance) => this.dropDownHandlerElement = instance}\n          >\n            <span>{caption}</span>\n            {showDropDownArrow !== false ? <i className=\"braft-icon-drop-down\"></i> : null}\n          </button>\n        )}\n        <div\n          className=\"dropdown-content\"\n          style={{marginLeft: offset + 'px'}}\n          ref={(instance) => this.dropDownContentElement = instance}\n        >\n          <i\n            style={{marginLeft: offset * -1}}\n            className={'dropdown-arrow' + (arrowActive ? ' active' : '')}\n          ></i>\n          <div\n            className=\"dropdown-content-inner\"\n            style={dropDownContentInnerStyle}\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n\n  fixDropDownPosition () {\n\n    let offset = 0\n    let viewRect = null\n\n    if (this.props.viewWrapper) {\n      viewRect = document.querySelector(this.props.viewWrapper).getBoundingClientRect()\n    } else {\n      viewRect = document.body.getBoundingClientRect()\n    }\n\n    let handlerRect = this.dropDownHandlerElement.getBoundingClientRect()\n    let contentRect = this.dropDownContentElement.getBoundingClientRect()\n    let right = handlerRect.right - handlerRect.width / 2 + contentRect.width / 2\n    let left = handlerRect.left + handlerRect.width / 2 - contentRect.width / 2\n\n    right = viewRect.right - right\n    left = left - viewRect.left\n\n    if (right < 10) {\n      offset = right - 10\n    } else if (left < 10) {\n      offset = left * -1 + 10\n    }\n\n    offset !== this.state.offset && this.setState({ offset })\n\n  }\n\n  registerClickEvent (event) {\n\n    let { autoHide } = this.props\n    let active = false\n\n    if (event.target.dataset.braftComponentId === this.componentId) {\n      active = event.target.dataset.keepActive ? true : !this.state.active\n    } else if (autoHide === false) {\n      active = this.state.active\n    }\n\n    this.alive && this.setState({ active })\n\n  }\n\n  show () {\n    this.setState({\n      active: true\n    })\n  }\n\n  hide () {\n    this.setState({\n      active: false\n    })\n  }\n\n\n}","import './style.scss'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BastUtils } from 'braft-utils'\n\nexport default class Modal extends React.Component {\n\n  constructor (props) {\n\n    super(props)\n    this.active = false\n    this.componentId = 'BRAFT-MODAL-' + BastUtils.UniqueIndexUniqueIndex()\n\n  }\n\n  static defaultProps = {\n    header: true,\n    footer: true\n  }\n\n  componentDidMount () {\n\n    if (this.props.visible) {\n      this.active = true\n      this.renderComponent(this.props)\n    }\n\n  }\n\n  componentWillReceiveProps (next) {\n\n    if (this.props.visible && !next.visible) {\n      this.unrenderComponent()\n    } else if (this.props.visible || next.visible) {\n      this.active = true\n      this.renderComponent(next)\n    }\n\n  }\n\n  render () {\n    return null\n  }\n\n  handleTransitionEnd = () => {\n\n    if (!this.rootElement || !this.rootElement.classList) {\n      return false\n    }\n\n    if (!this.rootElement.classList.contains('active')) {\n      ReactDOM.unmountComponentAtNode(this.rootElement) && this.rootElement.parentNode.removeChild(this.rootElement)\n    }\n\n  }\n\n  unrenderComponent () {\n    this.active = false\n    this.activeId && window.clearImmediate(this.activeId)\n    if (this.rootElement && this.rootElement.classList) {\n      this.rootElement.classList.remove('active')\n    }\n  }\n\n  renderComponent (props) {\n\n    if (!this.active) {\n      return false\n    }\n\n    let { title, className, width, height, children, confirmable, showCancel, showConfirm, showClose, cancelText, confirmText, bottomText, language } = props\n\n    typeof showCancel === 'undefined' && (showCancel = true)\n    typeof showClose === 'undefined' && (showClose = true)\n    typeof showConfirm === 'undefined' && (showConfirm = true)\n\n    const childComponent = (\n      <div className={\"braft-modal \" + (className || '')}>\n        <div className=\"braft-modal-mask\"></div>\n        <div onTransitionEnd={this.handleTransitionEnd} style={{width, height}} className=\"braft-modal-content\">\n          <div className=\"braft-modal-header\">\n            <h3 className=\"braft-modal-caption\">{title}</h3>\n            {showClose && <button type=\"button\" onClick={this.close} className=\"braft-modal-close-button\"><i className=\"braft-icon-close\"></i></button>}\n          </div>\n          <div className=\"braft-modal-body\">{children}</div>\n          <div className=\"braft-modal-footer\">\n            <div className=\"braft-modal-addon-text\">{bottomText}</div>\n            <div className=\"braft-modal-buttons\">\n              {showCancel && <button type=\"button\" onClick={this.handleCancel} className=\"braft-modal-cancel\">{cancelText || language.base.cancel}</button>}\n              {showConfirm && <button type=\"button\" onClick={this.handleConfirm} className={\"braft-modal-confirm \" + (!confirmable ? 'disabled' : '')}>{confirmText || language.base.confirm}</button>}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n    this.rootElement = document.querySelector('#' + this.componentId)\n\n    if (!this.rootElement) {\n      this.rootElement = document.createElement('div')\n      this.rootElement.id = this.componentId\n      this.rootElement.className = 'braft-modal-root'\n      document.body.appendChild(this.rootElement)\n    }\n\n    ReactDOM.render(childComponent, this.rootElement)\n\n    this.activeId = window.setImmediate(() => {\n      this.rootElement.classList.add('active')\n    })\n\n  }\n\n  handleCancel = () => {\n    this.props.closeOnCancel && this.close()\n    this.props.onCancel && this.props.onCancel()\n  }\n\n  handleConfirm = () => {\n    this.props.closeOnConfirm && this.close()\n    this.props.onConfirm && this.props.onConfirm()\n  }\n\n  close = () => {\n    this.unrenderComponent()\n    this.props.onClose && this.props.onClose()\n  }\n\n}\n\nexport const showModal = (props) => {\n\n  const host = document.createElement('div')\n  host.style.display = 'none'\n  document.body.appendChild(host)\n\n  const close = () => {\n    ReactDOM.unmountComponentAtNode(host) && host.parentNode.removeChild(host)\n  }\n\n  const onConfirm = () => {\n    close()\n    props.onConfirm && props.onConfirm()\n  }\n\n  const onCancel = () => {\n    close()\n    props.onCancel && props.onCancel()\n  }\n\n  const onClose = () => {\n    close()\n    props.onClose && props.onClose()\n  }\n\n  const extProps = {\n    onConfirm, onCancel, onClose,\n    visible: true,\n    closeOnConfirm: true,\n    closeOnCancel: true\n  }\n\n  const modalInstance = ReactDOM.render(<Modal { ...props } { ...extProps }/>, host)\n  modalInstance.destroy = close\n  modalInstance.update = modalInstance.renderComponent\n\n  return modalInstance\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","import './style.scss'\nimport React from 'react'\n\nexport default (props) => {\n\n  const { active, onClick, className } = props\n\n  return (\n    <div onClick={() => onClick()} className={\"switch-button \" + className + (active ? ' active' : '')}></div>\n  )\n\n}\n","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentIndent = null\n\n  props.indents.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'INDENT-' + item)) {\n      caption = item\n      currentIndent = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.indent}\n      className={\"control-item dropdown braft-indent-dropdown\"}\n    >\n      <ul className=\"braft-indents-wrap\">\n        {props.indents.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentIndent ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionIndent(props.editorState, e.currentTarget.dataset.size, props.indents))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentLetterSpacing = null\n\n  props.letterSpacings.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'LETTERSPACING-' + item)) {\n      caption = item\n      currentLetterSpacing = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.letterSpacing}\n      className={\"control-item dropdown braft-letter-spacing-dropdown\"}\n    >\n      <ul className=\"braft-letter-spacings-wrap\">\n        {props.letterSpacings.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentLetterSpacing ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionLetterSpacing(props.editorState, e.currentTarget.dataset.size, props.letterSpacings))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  return (\n    <DropDown\n      caption={props.defaultCaption}\n      showDropDownArrow={false}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.emoji}\n      className={\"control-item dropdown braft-emoji-dropdown\"}\n    >\n      <div className=\"braft-emojis-wrap\">\n        <ul className=\"braft-emojis\">\n          {props.emojis.map((item, index) => {\n            return (\n              <li\n                key={index}\n                data-emoji={item}\n                onClick={(e) => {\n                  props.editor.setValue(ContentUtils.insertText(props.editorState, e.currentTarget.dataset.emoji))\n                  props.editor.requestFocus()\n                }}\n              >{item}</li>\n            )\n          })}\n        </ul>\n      </div>\n    </DropDown>\n  )\n\n}","import React from 'react'\nimport { ContentUtils } from 'braft-utils'\n\nexport default class TextAlign extends React.Component {\n\n  state = {\n    currentAlignment: undefined\n  }\n\n  componentWillReceiveProps (next) {\n    this.setState({\n      currentAlignment: ContentUtils.getSelectionBlockData(next.editorState, 'textAlign')\n    })\n  }\n\n  setAlignment = (e) => {\n    this.props.editor.setValue(ContentUtils.toggleSelectionAlignment(this.props.editorState, e.currentTarget.dataset.alignment))\n    this.props.editor.requestFocus()\n  }\n\n  render () {\n\n    const textAlignmentTitles = [\n      this.props.language.controls.alignLeft,\n      this.props.language.controls.alignCenter,\n      this.props.language.controls.alignRight,\n      this.props.language.controls.alignJustify\n    ]\n\n    return (\n      <div className=\"control-item-group\">\n        {\n          this.props.textAlignOptions.map((item, index) => {\n            return (\n              <button\n                type=\"button\"\n                key={index}\n                title={textAlignmentTitles[index]}\n                data-alignment={item}\n                className={'control-item button ' + (item === this.state.currentAlignment ? 'active' : null)}\n                onClick={this.setAlignment}\n              >\n                <i className={\"braft-icon-align-\" + item}></i>\n              </button>\n            )\n          })\n        }\n      </div>\n    )\n\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentIndex = null\n\n  props.fontFamilies.find((item, index) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'FONTFAMILY-' + item.name)) {\n      caption = item.name\n      currentIndex = index\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.fontFamily}\n      arrowActive={currentIndex === 0}\n      className={\"control-item dropdown font-family-dropdown\"}\n    >\n      <ul className=\"menu\">\n        {props.fontFamilies.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={\"menu-item \" + (index === currentIndex ? 'active' : '')}\n              data-name={item.name}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionFontFamily(props.editorState, e.currentTarget.dataset.name, props.fontFamilies))\n                props.editor.requestFocus()\n              }}\n            >\n              <span style={{fontFamily: item.family}}>{item.name}</span>\n            </li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentLineHeight = null\n\n  props.lineHeights.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'LINEHEIGHT-' + item)) {\n      caption = item\n      currentLineHeight = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.lineHeight}\n      className={\"control-item dropdown braft-line-height-dropdown\"}\n    >\n      <ul className=\"braft-line-heights-wrap\">\n        {props.lineHeights.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentLineHeight ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionLineHeight(props.editorState, e.currentTarget.dataset.size, props.lineHeights))\n                props.editor.requestFocus()\n              }}\n            >{item}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  let caption = null\n  let currentFontSize = null\n\n  props.fontSizes.find((item) => {\n    if (ContentUtils.selectionHasInlineStyle(props.editorState, 'FONTSIZE-' + item)) {\n      caption = item + 'px'\n      currentFontSize = item\n      return true\n    }\n    return false\n  })\n\n  return (\n    <DropDown\n      caption={caption || props.defaultCaption}\n      editorHeight={props.editorHeight}\n      viewWrapper={props.viewWrapper}\n      hoverTitle={props.language.controls.fontSize}\n      className={\"control-item dropdown braft-font-size-dropdown\"}\n    >\n      <ul className=\"braft-font-sizes-wrap\">\n        {props.fontSizes.map((item, index) => {\n          return (\n            <li\n              key={index}\n              className={item === currentFontSize ? 'active' : null}\n              data-size={item}\n              onClick={(e) => {\n                props.editor.setValue(ContentUtils.toggleSelectionFontSize(props.editorState, e.currentTarget.dataset.size, props.fontSizes))\n                props.editor.requestFocus()\n              }}\n            >{item + 'px'}</li>\n          )\n        })}\n      </ul>\n    </DropDown>\n  )\n\n}","import './style.scss'\nimport React from 'react'\n\nexport default (props) => {\n\n  const { current, colors, onChange, language } = props\n\n  return (\n    <div className=\"braft-color-list-wrap\">\n      <ul className=\"braft-color-list\">\n        {colors.map((item, index) => {\n          let className = item === current ? 'color-item active' : 'color-item'\n          return (\n            <li\n              key={index}\n              title={item}\n              className={className}\n              style={{color: item}}\n              data-color={item.replace('#', '')}\n              onClick={(e) => props.onChange(e.currentTarget.dataset.color)}\n            >\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n\n}","import './style.scss'\nimport React from 'react'\nimport DropDown from 'components/common/DropDown'\nimport ColorPicker from 'components/common/ColorPicker'\nimport { BaseUtils, ContentUtils } from 'braft-utils'\n\nexport default class TextColor extends React.Component {\n\n  state = {\n    colorType: 'color'\n  }\n\n  dropDownComponentId = 'BRAFT-DROPDOWN-' + BaseUtils.UniqueIndex()\n\n  render () {\n\n    let captionStyle = {}\n    let currentColor = null\n    let { colorType } = this.state\n\n    this.props.colors.forEach((color) => {\n      let color_id = color.replace('#', '')\n      if (ContentUtils.selectionHasInlineStyle(this.props.editorState, 'COLOR-' + color_id)) {\n        captionStyle.color = color\n        colorType === 'color' && (currentColor = color)\n      }\n\n      if (ContentUtils.selectionHasInlineStyle(this.props.editorState, 'BGCOLOR-' + color_id)) {\n        captionStyle.backgroundColor = color\n        colorType === 'backgroundColor' && (currentColor = color)\n      }\n\n    })\n\n    const caption = (\n      <i style={captionStyle} className=\"braft-icon-text-color\">\n        <span className=\"path1\"></span>\n        <span className=\"path2\"></span>\n      </i>\n    )\n\n    return (\n      <DropDown\n        caption={caption}\n        hoverTitle={this.props.language.controls.color}\n        showDropDownArrow={false}\n        viewWrapper={this.props.viewWrapper}\n        editorHeight={this.props.editorHeight}\n        componentId={this.dropDownComponentId}\n        ref={(instance) => this.dropDownComponent = instance}\n        className={\"control-item dropdown text-color-dropdown\"}\n      >\n        <div className=\"braft-text-color-picker-wrap\">\n          <div className=\"braft-color-switch-buttons\" style={this.props.disableTextBackgroundColor ? {display: 'none'} : {}}>\n            <button\n              type=\"button\"\n              data-type=\"color\"\n              data-keep-active={true}\n              data-braft-component-id={this.dropDownComponentId}\n              className={colorType === 'color' ? 'active' : ''}\n              onClick={this.switchColorType}\n            >{this.props.language.controls.textColor}</button>\n            <button\n              type=\"button\"\n              data-type=\"backgroundColor\"\n              data-keep-active={true}\n              data-braft-component-id={this.dropDownComponentId}\n              className={colorType === 'backgroundColor' ? 'active' : ''}\n              onClick={this.switchColorType}\n            >{this.props.language.controls.backgroundColor}</button>\n          </div>\n          <ColorPicker\n            width={200}\n            language={this.props.language}\n            current={currentColor}\n            disableAlpha={true}\n            colors={this.props.colors}\n            onChange={this.toggleColor}\n          />\n        </div>\n      </DropDown>\n    )\n\n  }\n\n  switchColorType = (e) => {\n\n    this.setState({\n      colorType: e.currentTarget.dataset.type\n    })\n\n  }\n\n  toggleColor = (color) => {\n\n    if (this.state.colorType === 'color') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionColor(this.props.editorState, color, this.props.colors))\n    } else {\n      this.props.editor.setValue(ContentUtils.toggleSelectionBackgroundColor(this.props.editorState, color, this.props.colors))\n    }\n\n    this.dropDownComponent.hide()\n    this.props.editor.requestFocus()\n\n  }\n\n}","import React from 'react'\n\nexport const getHeadings = (lang) => [\n  {\n    key: 'header-one',\n    title: lang.controls.header + ' 1',\n    text: <h1>{lang.controls.header} 1</h1>,\n    type: 'block-type',\n    command: 'header-one'\n  }, {\n    key: 'header-two',\n    title: lang.controls.header + ' 2',\n    text: <h2>{lang.controls.header} 2</h2>,\n    type: 'block-type',\n    command: 'header-two'\n  }, {\n    key: 'header-three',\n    title: lang.controls.header + ' 3',\n    text: <h3>{lang.controls.header} 3</h3>,\n    type: 'block-type',\n    command: 'header-three'\n  }, {\n    key: 'header-four',\n    title: lang.controls.header + ' 4',\n    text: <h4>{lang.controls.header} 4</h4>,\n    type: 'block-type',\n    command: 'header-four'\n  }, {\n    key: 'header-five',\n    title: lang.controls.header + ' 5',\n    text: <h5>{lang.controls.header} 5</h5>,\n    type: 'block-type',\n    command: 'header-five'\n  }, {\n    key: 'header-six',\n    title: lang.controls.header + ' 6',\n    text: <h6>{lang.controls.header} 6</h6>,\n    type: 'block-type',\n    command: 'header-six'\n  }, {\n    key: 'unstyled',\n    title: lang.controls.normal,\n    text: lang.controls.normal,\n    type: 'block-type',\n    command: 'unstyled'\n  }\n]\n\nexport const blocks = {\n  'header-one': 'h1',\n  'header-two': 'h2',\n  'header-three': 'h3',\n  'header-four': 'h4',\n  'header-fiv': 'h5',\n  'header-six': 'h6',\n  'unstyled': 'p',\n  'blockquote': 'blockquote'\n}","import './style.scss'\nimport React from 'react'\nimport { getHeadings } from 'configs/maps'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default (props) => {\n\n  const headings = getHeadings(props.language)\n  const currentHeadingIndex = headings.findIndex((item) => item.command === props.current)\n  const caption = headings[currentHeadingIndex] ? headings[currentHeadingIndex].title : props.language.controls.normal\n\n  return (\n    <DropDown\n      caption={caption}\n      viewWrapper={props.viewWrapper}\n      editorHeight={props.editorHeight}\n      hoverTitle={props.language.controls.headings}\n      arrowActive={currentHeadingIndex === 0}\n      className={\"control-item dropdown headings-dropdown\"}\n    >\n      <ul className=\"menu\">\n        {\n          headings.map((item, index) => {\n            let isActive = props.current === item.command\n            return (\n              <li\n                key={index}\n                className={\"menu-item\" + (isActive ? ' active' : '')}\n                onClick={() => props.onChange(item.command, item.type)}\n              >\n                {item.text}\n              </li>\n            )\n          })\n        }\n      </ul>\n    </DropDown>\n  )\n\n}","import { BaseUtils } from 'braft-utils'\n\nlet resizeEventHandlers = []\nlet responsiveHelperInited = false\nlet debouce = false\n\nexport default {\n\n  resolve (eventHandler) {\n    let id = BaseUtils.UniqueIndex()\n    resizeEventHandlers.push({ id, eventHandler })\n    return id\n  },\n\n  unresolve (id) {\n    resizeEventHandlers = resizeEventHandlers.filter(item => item.id !== id)\n  }\n\n}\n\nif (!responsiveHelperInited) {\n\n  window.addEventListener('resize', (event) => {\n    clearTimeout(debouce)\n    debouce = setTimeout(() => {\n      resizeEventHandlers.map((item) => {\n        typeof item.eventHandler === 'function' && item.eventHandler(event)\n      })\n      debouce = false\n    }, 100)\n  })\n\n  responsiveHelperInited = true\n\n}","import './style.scss'\nimport React from 'react'\nimport Switch from 'components/common/Switch'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\n\nexport default class LinkEditor extends React.Component {\n\n  state = {\n    href: '',\n    target: ''\n  }\n\n  dropDownComponent = null\n\n  componentWillReceiveProps (next) {\n\n    const { href, target } = ContentUtils.getSelectionEntityData(next.editorState, 'LINK')\n    this.setState({\n      href: href || '',\n      target: target || ''\n    })\n\n  }\n\n  render () {\n\n    const { href, target } = this.state\n    const caption = <i className=\"braft-icon-link\"></i>\n    const textSelected = !ContentUtils.selectionCollapsed(this.props.editorState) && ContentUtils.getSelectionBlockType(this.props.editorState) !== 'atomic'\n\n    return (\n      <div className=\"control-item-group\">\n        <DropDown\n          caption={caption}\n          hoverTitle={this.props.language.controls.link}\n          autoHide={false}\n          viewWrapper={this.props.viewWrapper}\n          showDropDownArrow={false}\n          disabled={!textSelected}\n          ref={(instance) => this.dropDownComponent = instance}\n          className={\"control-item dropdown link-editor-dropdown\"}\n        >\n          <div className=\"braft-link-editor\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                value={href}\n                spellCheck={false}\n                placeholder={this.props.language.linkEditor.inputPlaceHolder}\n                onKeyDown={this.handeKeyDown}\n                onChange={this.inputLink}\n              />\n            </div>\n            <div className=\"switch-group\">\n              <Switch\n                active={target === '_blank'}\n                onClick={this.setTarget}\n              />\n              <label>{this.props.language.linkEditor.openInNewWindow}</label>\n            </div>\n            <div className=\"buttons\">\n              <a onClick={this.handleUnlink} className=\"primary pull-left\" href=\"javascript:void(0);\">\n                <i className=\"braft-icon-close\"></i>\n                <span>{this.props.language.linkEditor.removeLink}</span>\n              </a>\n              <button type=\"button\" onClick={this.handleConfirm} className=\"primary pull-right\">{this.props.language.base.confirm}</button>\n              <button type=\"button\" onClick={this.handleCancel} className=\"default pull-right\">{this.props.language.base.cancel}</button>\n            </div>\n          </div>\n        </DropDown>\n        <button\n          type=\"button\"\n          title={this.props.language.controls.unlink}\n          className=\"control-item button\"\n          onClick={this.handleUnlink}\n          disabled={!textSelected || !href}\n        >\n          <i className=\"braft-icon-link-off\"></i>\n        </button>\n      </div>\n    )\n\n  }\n\n  handeKeyDown = (e) => {\n    if (e.keyCode === 13) {\n      this.handleConfirm()\n      e.preventDefault()\n      return false\n    }\n  }\n\n  inputLink = (e) => {\n    this.setState({\n      href: e.currentTarget.value\n    })\n  }\n\n  setTarget = () => {\n    this.setState({\n      target: this.state.target === '_blank' ? '' : '_blank'\n    })\n  }\n\n  handleCancel = () => {\n    this.dropDownComponent.hide()\n  }\n\n  handleUnlink = () => {\n    this.dropDownComponent.hide()\n    this.props.editor.setValue(ContentUtils.toggleSelectionLink(this.props.editorState, false))\n  }\n\n  handleConfirm = () => {\n\n    const { href, target } = this.state\n    this.props.editor.setValue(ContentUtils.toggleSelectionLink(this.props.editorState, href, target))\n    this.dropDownComponent.hide()\n    this.props.editor.requestFocus()\n\n  }\n\n}","import React from 'react'\n\nexport default (lang) => [\n  {\n    key: 'undo',\n    title: lang.controls.undo,\n    text: <i className=\"braft-icon-undo\"></i>,\n    type: 'editor-state-method',\n    command: 'undo'\n  }, {\n    key: 'redo',\n    title: lang.controls.redo,\n    text: <i className=\"braft-icon-redo\"></i>,\n    type: 'editor-state-method',\n    command: 'redo'\n  }, {\n    key: 'remove-styles',\n    title: lang.controls.removeStyles,\n    text: <i className=\"braft-icon-format_clear\"></i>,\n    type: 'editor-state-method',\n    command: 'removeSelectionInlineStyles'\n  }, {\n    key: 'hr',\n    title: lang.controls.hr,\n    text: <i className=\"braft-icon-hr\"></i>,\n    type: 'editor-state-method',\n    command: 'insertHorizontalLine'\n  }, {\n    key: 'bold',\n    title: lang.controls.bold,\n    text: <i className=\"braft-icon-bold\"></i>,\n    type: 'inline-style',\n    command: 'bold'\n  },{\n    key: 'italic',\n    title: lang.controls.italic,\n    text: <i className=\"braft-icon-italic\"></i>,\n    type: 'inline-style',\n    command: 'italic'\n  }, {\n    key: 'underline',\n    title: lang.controls.underline,\n    text: <i className=\"braft-icon-underlined\"></i>,\n    type: 'inline-style',\n    command: 'underline'\n  }, {\n    key: 'strike-through',\n    title: lang.controls.strikeThrough,\n    text: <i className=\"braft-icon-strikethrough\"></i>,\n    type: 'inline-style',\n    command: 'strikethrough',\n  }, {\n    key: 'superscript',\n    title: lang.controls.superScript,\n    text: <i className=\"braft-icon-superscript\"></i>,\n    type: 'inline-style',\n    command: 'superscript'\n  }, {\n    key: 'subscript',\n    title: lang.controls.subScript,\n    text: <i className=\"braft-icon-subscript\"></i>,\n    type: 'inline-style',\n    command: 'subscript'\n  }, {\n    key: 'headings',\n    title: lang.controls.headings,\n    type: 'headings',\n  }, {\n    key: 'blockquote',\n    title: lang.controls.blockQuote,\n    text: <i className=\"braft-icon-quote\"></i>,\n    type: 'block-type',\n    command: 'blockquote',\n  }, {\n    key: 'code',\n    title: lang.controls.code,\n    text: <i className=\"braft-icon-code\"></i>,\n    type: 'block-type',\n    command: 'code-block'\n  }, {\n    key: 'list_ul',\n    title: lang.controls.unorderedList,\n    text: <i className=\"braft-icon-list\"></i>,\n    type: 'block-type',\n    command: 'unordered-list-item'\n  }, {\n    key: 'list_ol',\n    title: lang.controls.orderedList,\n    text: <i className=\"braft-icon-list-numbered\"></i>,\n    type: 'block-type',\n    command: 'ordered-list-item'\n  }, {\n    key: 'link',\n    title: lang.controls.link,\n    type: 'link'\n  }, {\n    key: 'text-color',\n    title: lang.controls.color,\n    type: 'text-color'\n  },  {\n    key: 'line-height',\n    title: lang.controls.lineHeight, \n    type: 'line-height'\n  }, {\n    key: 'letter-spacing',\n    title: lang.controls.letterSpacing,\n    type: 'letter-spacing'\n  }, {\n    key: 'indent',\n    title: lang.controls.indent,\n    type: 'indent'\n  },{\n    key: 'font-size',\n    title: lang.controls.fontSize,\n    type: 'font-size'\n  }, {\n    key: 'font-family',\n    title: lang.controls.fontFamily,\n    type: 'font-family'\n  }, {\n    key: 'text-align',\n    title: lang.controls.textAlign,\n    type: 'text-align'\n  }, {\n    key: 'media',\n    title: lang.controls.media,\n    text: <i className=\"braft-icon-media\"></i>,\n    type: 'media'\n  }, {\n    key: 'emoji',\n    title: lang.controls.emoji,\n    text: <i className=\"braft-icon-emoji\"></i>,\n    type: 'emoji'\n  }, {\n    key: 'clear',\n    title: lang.controls.clear,\n    text: <span className=\"braft-control-text\">{lang.controls.clear}</span>,\n    type: 'editor-state-method',\n    command: 'clear'\n  }\n]","import './style.scss'\nimport React from 'react'\nimport getSupportedControls from 'configs/controls'\nimport LinkEditor from 'components/business/LinkEditor'\nimport HeadingPicker from 'components/business/Headings'\nimport TextColorPicker from 'components/business/TextColor'\nimport FontSizePicker from 'components/business/FontSize'\nimport LineHeightPicker from 'components/business/LineHeight'\nimport FontFamilyPicker from 'components/business/FontFamily'\nimport TextAlign from 'components/business/TextAlign'\nimport EmojiPicker from 'components/business/EmojiPicker'\nimport LetterSpacingPicker from 'components/business/letterSpacing'\nimport IndentPicker from 'components/business/indent'\nimport DropDown from 'components/common/DropDown'\nimport { ContentUtils } from 'braft-utils'\nimport { showModal } from 'components/common/Modal'\n\nexport default class ControlBar extends React.Component {\n\n  mediaPicker = null\n  extendedModals = {}\n\n  componentDidUpdate () {\n\n    const { extendControls, language } = this.props\n\n    extendControls.forEach(item => {\n      if (item.type === 'modal') {\n        if (item.modal && item.modal.id && this.extendedModals[item.modal.id]) {\n          this.extendedModals[item.modal.id].update({ ...item.modal, language })\n        }\n      }\n    })\n\n  }\n\n  getControlItemClassName (data) {\n\n    let className = 'control-item button'\n    let { type, command } = data\n\n    if (type === 'inline-style' && ContentUtils.selectionHasInlineStyle(this.props.editorState, command)) {\n      className += ' active'\n    } else if (type === 'block-type' && ContentUtils.getSelectionBlockType(this.props.editorState) === command) {\n      className += ' active'\n    }\n\n    return className\n\n  }\n\n  applyControl (command, type) {\n\n    if (type === 'inline-style') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionInlineStyle(this.props.editorState, command))\n    } else if (type === 'block-type') {\n      this.props.editor.setValue(ContentUtils.toggleSelectionBlockType(this.props.editorState, command))\n    } else if (type === 'editor-state-method') {\n      this.props.editor[command] && this.props.editor[command]()\n    }\n\n    this.props.editor.requestFocus()\n\n  }\n\n  showMediaPicker = () => {\n  }\n\n  render() {\n\n    const { editor, editorState, controls, media, extendControls, language, colors, fontSizes, fontFamilies, emojis, viewWrapper, lineHeights, letterSpacings, editorHeight, textAlignOptions, allowSetTextBackgroundColor, indents} = this.props\n    const currentBlockType = ContentUtils.getSelectionBlockType(editorState)\n    const supportedControls = getSupportedControls(language)\n    const commonProps = { editor, editorState, editorHeight, language, viewWrapper }\n\n    const renderedExtendControls = extendControls.map((item, index) => {\n      if (item.type === 'split') {\n        return <span key={controls.length * 2 + index} className=\"split-line\"></span>\n      } else if (item.type === 'dropdown') {\n        let { disabled, autoHide, html, text, className, showDropDownArrow, hoverTitle, component, arrowActive, ref } = item\n        return (\n          <DropDown\n            key={index}\n            className={\"control-item dropdown \" + className}\n            caption={text}\n            editorHeight={editorHeight}\n            htmlCaption={html}\n            showDropDownArrow={showDropDownArrow}\n            viewWrapper={viewWrapper}\n            hoverTitle={hoverTitle}\n            arrowActive={arrowActive}\n            autoHide={autoHide}\n            disabled={disabled}\n            ref={ref}\n          >\n            {component}\n          </DropDown>\n        )\n      } else if (item.type === 'modal') {\n        return (\n          <button\n            type=\"button\"\n            key={controls.length * 2 + index}\n            title={item.hoverTitle}\n            className={'control-item button ' + item.className}\n            dangerouslySetInnerHTML={item.html ? { __html: item.html } : null}\n            onClick={(event) => {\n              if (item.modal && item.modal.id) {\n                if (this.extendedModals[item.modal.id]) {\n                  this.extendedModals[item.modal.id].active = true\n                  this.extendedModals[item.modal.id].update({ ...item.modal, language })\n                } else {\n                  this.extendedModals[item.modal.id] = showModal({ ...item.modal, language })\n                  item.modal.onCreate && item.modal.onCreate(this.extendedModals[item.modal.id])\n                }\n              }\n              item.onClick && item.onClick(event)\n            }}\n          >\n            {!item.html ? item.text : null}\n          </button>\n        )\n      } else if (item.type === 'component') {\n        return (\n          <div\n            key={controls.length * 2 + index}\n            className={'control-item component-wrapper ' + item.className}\n          >{item.component}</div>\n        )\n      } else {\n        return (\n          <button\n            type=\"button\"\n            key={controls.length * 2 + index}\n            title={item.hoverTitle}\n            className={'control-item button ' + item.className}\n            dangerouslySetInnerHTML={item.html ? { __html: item.html } : null}\n            onClick={(event) => item.onClick && item.onClick(event)}\n          >\n            {!item.html ? item.text : null}\n          </button>\n        )\n      }\n    })\n\n    return (\n      <div className=\"BraftEditor-controlBar\">\n        {\n          controls.map((item, index) => {\n            if (item.toLowerCase() === 'split') {\n              return <span key={index} className=\"split-line\"></span>\n            }\n            let controlItem = supportedControls.find((subItem) => {\n              return subItem.key.toLowerCase() === item.toLowerCase()\n            })\n            if (!controlItem) {\n              return null\n            }\n            if (controlItem.type === 'headings') {\n              return <HeadingPicker\n                key={index}\n                current={currentBlockType}\n                onChange={(command) => this.applyControl(command, 'block-type')}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'text-color') {\n              return <TextColorPicker\n                key={index}\n                colors={colors}\n                allowSetTextBackgroundColor={allowSetTextBackgroundColor}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'font-size') {\n              return <FontSizePicker\n                key={index}\n                fontSizes={fontSizes}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'line-height') {\n              return <LineHeightPicker\n                key={index}\n                lineHeights={lineHeights}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'letter-spacing') {\n              return <LetterSpacingPicker\n                key={index}\n                letterSpacings={letterSpacings}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'indent') {\n              return <IndentPicker\n                key={index}\n                indents={indents}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'font-family') {\n              return <FontFamilyPicker\n                key={index}\n                fontFamilies={fontFamilies}\n                defaultCaption={controlItem.title}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'emoji') {\n              return <EmojiPicker\n                key={index}\n                emojis={emojis}\n                defaultCaption={controlItem.text}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'link') {\n              return <LinkEditor\n                key={index}\n                {...commonProps}\n              />\n            } else if (controlItem.type === 'text-align') {\n              return (\n                <TextAlign\n                  key={index}\n                  textAlignOptions={textAlignOptions}\n                  {...commonProps}\n                />\n              )\n            } else if (controlItem.type === 'media') {\n              if (!media.image && !media.video && !media.audio) {\n                return null\n              }\n              return (\n                <button\n                  type=\"button\"\n                  key={index}\n                  title={controlItem.title}\n                  className='control-item button'\n                  onClick={this.showMediaPicker}\n                >\n                  {controlItem.text}\n                </button>\n              )\n            } else {\n              let buttonClassName = this.getControlItemClassName({\n                type: controlItem.type,\n                command: controlItem.command\n              })\n              return (\n                <button\n                  type=\"button\"\n                  key={index}\n                  title={controlItem.title}\n                  className={buttonClassName}\n                  onClick={() => this.applyControl(controlItem.command, controlItem.type)}\n                >\n                  {controlItem.text}\n                </button>\n              )\n            }\n          })\n        }\n        {renderedExtendControls}\n      </div>\n    )\n\n  }\n\n}","import React from 'react'\n\nfunction handleStrategy (contentBlock, callback, contentState) {\n\n  contentBlock.findEntityRanges((character) => {\n    const entityKey = character.getEntity()\n    return (\n      entityKey !== null &&\n      contentState.getEntity(entityKey).getType() === 'LINK'\n    )\n  }, callback)\n\n}\n\nconst Link = (props) => {\n\n  const { children, entityKey, contentState } = props\n  const { href, target } = contentState.getEntity(entityKey).getData()\n\n  return (\n    <span className=\"braft-link-wrap\">\n      <a onClick={(event) => viewLink(event, href)} className=\"braft-link\" href={href} target={target}>{children}</a>\n    </span>\n  )\n\n}\n\nconst viewLink = (event, link) => {\n  if (event.getModifierState('Shift')) {\n    const tempLink = document.createElement('a')\n    tempLink.href = link\n    tempLink.target = '_blank'\n    tempLink.click()\n  }\n}\n\nexport default {\n  strategy: handleStrategy,\n  component: Link\n}","import Link from './Link'\n\nexport default [Link]","export default (props) => {\n\n  const colorStyles = {}\n  const bgColorStyles = {}\n  const fontSizeStyles = {}\n  const fontFamilyStyles = {}\n  const lineHeightStyles = {}\n  const letterSpacingtStyles = {}\n  const indentStyles = {}\n\n  props.colors.forEach((color) => {\n    let color_id = color.replace('#', '').toUpperCase()\n    colorStyles['COLOR-' + color_id] = { color }\n    bgColorStyles['BGCOLOR-' + color_id] = { backgroundColor: color }\n  })\n\n  props.fontSizes.forEach((fontSize) => {\n    fontSizeStyles['FONTSIZE-' + fontSize] = { fontSize: fontSize }\n  })\n\n  props.fontFamilies.forEach((fontFamily) => {\n    fontFamilyStyles['FONTFAMILY-' + fontFamily.name.toUpperCase()] = {\n      fontFamily: fontFamily.family\n    }\n  })\n\n  props.lineHeights.forEach((lineHeight) => {\n    lineHeightStyles['LINEHEIGHT-' + lineHeight] = { lineHeight: lineHeight }\n  })\n\n  props.letterSpacings.forEach((letterSpacing) => {\n    letterSpacingtStyles['LETTERSPACING-' + letterSpacing] = { letterSpacing: letterSpacing }\n  })\n  props.indents.forEach((indent) => {\n    indentStyles['INDENT-' + indent] = { paddingLeft: indent, paddingRight: indent}\n  })\n  \n  return {\n    'SUPERSCRIPT': {\n      position: 'relative',\n      top: '-8px',\n      fontSize: '11px'\n    },\n    'SUBSCRIPT': {\n      position: 'relative',\n      bottom: '-8px',\n      fontSize: '11px'\n    },\n    ...colorStyles,\n    ...bgColorStyles,\n    ...fontSizeStyles,\n    ...fontFamilyStyles,\n    ...lineHeightStyles,\n    ...letterSpacingtStyles,\n    ...indentStyles\n  }\n\n}","export default function blockStyleFn (block) {\n\n  const blockAlignment = block.getData() && block.getData().get('textAlign')\n  const blockFloat = block.getData() && block.getData().get('float')\n\n  let result = null\n\n  if (blockAlignment) {\n    result = `braft-${blockAlignment}-aligned-block`\n  }\n\n  if (blockFloat) {\n    result += ` braft-float-${blockFloat}`\n  }\n\n  return result\n\n}","import React from 'react'\nimport './style.scss'\n\nexport default class HorizontalLine extends React.Component {\n\n  render () {\n\n    return (\n      <div className=\"braft-horizontal-line\">\n        <div className=\"braft-horizontal-line-toolbar\">\n          <a onClick={this.removeHorizontalLine}>&#xe9ac;</a>\n        </div>\n      </div>\n    )\n\n  }\n\n  removeHorizontalLine = () => {\n    this.props.editor.removeBlock(this.props.block)\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport { showModal } from 'components/common/Modal'\n\nexport default class Embed extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-video-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        <i className=\"braft-icon-code\"></i>\n        <h5>{name}</h5>\n        <h6>{url}</h6>\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-video-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeEmbed}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    const { url } = this.props.mediaData\n\n    this.playerModal = showModal({\n      title: this.props.language.videoPlayer.embedTitle,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      children: <div className=\"braft-embed-media-player\" dangerouslySetInnerHTML={{ __html: url}}/>\n    })\n\n  }\n\n  removeEmbed = () => {\n    this.props.editor.removeBlock(this.props.block)\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport { showModal } from 'components/common/Modal'\n\nexport default class Audio extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-audio-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        <i className=\"braft-icon-music\"></i>\n        <h5>{name}</h5>\n        <h6>{url}</h6>\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-audio-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeAudio}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    this.playerModal = showModal({\n      title: this.props.language.audioPlayer.title,\n      width: 480,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      onConfirm: this.handlePlayerClose,\n      children: <audio className=\"braft-embed-audio-player\" src={this.props.mediaData.url} controls/>\n    })\n\n  }\n\n  removeAudio = () => {\n    this.props.editor.removeBlock(this.props.block)\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.playerModal = null\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__28__;","import './style.scss'\nimport React from 'react'\nimport { showModal } from 'components/common/Modal'\n\nexport default class Video extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    playerVisible: false\n  }\n\n  componentWillUnmount () {\n    this.playerModal && this.playerModal.destroy()\n  }\n\n  render () {\n\n    const { toolbarVisible, playerVisible } = this.state\n    const { mediaData, language } = this.props\n    const { url, width, height, name, meta } = mediaData\n\n    return (\n      <div\n        className=\"braft-media-video-holder\"\n        onMouseOver={this.showToolbar}\n        onMouseLeave={this.hideToolbar}\n      >\n        {meta && meta.poster ? (\n          <img className=\"braft-media-video-poster\" src={meta.poster}/>\n        ) : (\n          <div>\n            <i className=\"braft-icon-film\"></i>\n            <h5>{name}</h5>\n            <h6>{url}</h6>\n          </div>\n        )}\n        {toolbarVisible ? (\n          <div\n            ref={instance => this.toolbarElement = instance}\n            className=\"braft-embed-video-toolbar\"\n          >\n            <a onClick={this.showPlayer}>&#xe037;</a>\n            <a onClick={this.removeVideo}>&#xe9ac;</a>\n          </div>\n        ) : null}\n      </div>\n    )\n\n  }\n\n  showPlayer = () => {\n\n    const { url, meta } = this.props.mediaData\n\n    this.playerModal = showModal({\n      title: this.props.language.videoPlayer.title,\n      width: 480,\n      confirmable: true,\n      language: this.props.language,\n      showCancel: false,\n      onClose: this.handlePlayerClose,\n      children: <video poster={meta && meta.poster ? meta.poster : ''} className=\"braft-embed-video-player\" src={url} controls/>\n    })\n\n  }\n\n  removeVideo = () => {\n    this.props.editor.removeBlock(this.props.block)\n  }\n\n  showToolbar = () => {\n    this.setState({\n      toolbarVisible: true\n    })\n  }\n\n  hideToolbar = () => {\n    this.setState({\n      toolbarVisible: false\n    })\n  }\n\n  handlePlayerClose = () => {\n    this.props.editor && this.props.editor.requestFocus()\n  }\n\n}","import './style.scss'\nimport React from 'react'\nimport Switch from 'components/common/Switch'\n\nexport default class Image extends React.Component {\n\n  state = {\n    toolbarVisible: false,\n    toolbarOffset: 0,\n    linkEditorVisible: false,\n    sizeEditorVisible: false,\n    tempLink: null,\n    tempWidth: null,\n    tempHeight: null\n  }\n\n  render () {\n\n    const { mediaData, language, imageControls } = this.props\n    const { toolbarVisible, toolbarOffset, linkEditorVisible, sizeEditorVisible } = this.state\n    const blockData = this.props.block.getData()\n\n    let float = blockData.get('float')\n    let alignment = blockData.get('alignment')\n    let { url, link, link_target, width, height } = mediaData\n    let imageStyles = {}\n    let clearFix = false\n\n    if (float) {\n      alignment = null\n    } else if (alignment === 'left') {\n      imageStyles.float = 'left'\n      clearFix = true\n    } else if (alignment === 'right') {\n      imageStyles.float = 'right'\n      clearFix = true\n    } else if (alignment === 'center') {\n      imageStyles.textAlign = \"center\"\n    } else {\n      imageStyles.float = 'left'\n      clearFix = true\n    }\n\n    return (\n      <div className=\"braft-media-embeder braft-image-embeder\">\n        <div\n          style={imageStyles}\n          draggable={true}\n          onMouseEnter={this.showToolbar}\n          onMouseMove={this.showToolbar}\n          onMouseLeave={this.hideToolbar}\n          onDragStart={this.handleDragStart}\n          onDragEnd={this.handleDragEnd}\n          ref={instance => this.mediaEmbederInstance = instance}\n          className=\"braft-embed-image\"\n        >\n          {toolbarVisible ? (\n            <div\n              style={{marginLeft: toolbarOffset}}\n              ref={instance => this.toolbarElement = instance}\n              data-float={float}\n              data-alignment={alignment}\n              className=\"braft-embed-image-toolbar\"\n            >\n              {linkEditorVisible ? (\n                <div className=\"braft-embed-image-link-editor\">\n                  <div className=\"editor-input-group\">\n                    <input type=\"text\" placeholder={language.linkEditor.inputWithEnterPlaceHolder} onKeyDown={this.handleLinkInputKeyDown} onChange={this.setImageLink} defaultValue={link}/>\n                    <button type=\"button\" onClick={this.confirmImageLink}>{language.base.confirm}</button>\n                  </div>\n                  <div className=\"switch-group\">\n                    <Switch\n                      active={link_target === '_blank'}\n                      onClick={() => this.setImageLinkTarget(link_target)}\n                    />\n                    <label>{language.linkEditor.openInNewWindow}</label>\n                  </div>\n                </div>\n              ) : null}\n              {sizeEditorVisible ? (\n                <div className=\"braft-embed-image-size-editor\">\n                  <div className=\"editor-input-group\">\n                    <input type=\"text\" placeholder={language.base.width} onKeyDown={this.handleSizeInputKeyDown} onChange={this.setImageWidth} defaultValue={width}/>\n                    <input type=\"text\" placeholder={language.base.height} onKeyDown={this.handleSizeInputKeyDown} onChange={this.setImageHeight} defaultValue={height}/>\n                    <button type=\"button\" onClick={this.confirmImageSize}>{language.base.confirm}</button>\n                  </div>\n                </div>\n              ) : null}\n              {imageControls.floatLeft ? <a data-float=\"left\" onClick={this.setImageFloat}>&#xe91e;</a> : null}\n              {imageControls.floatRight ? <a data-float=\"right\" onClick={this.setImageFloat}>&#xe914;</a> : null}\n              {imageControls.alignLeft ? <a data-alignment=\"left\" onClick={this.setImageAlignment}>&#xe027;</a> : null}\n              {imageControls.alignCenter ? <a data-alignment=\"center\" onClick={this.setImageAlignment}>&#xe028;</a> : null}\n              {imageControls.alignRight ? <a data-alignment=\"right\" onClick={this.setImageAlignment}>&#xe029;</a> : null}\n              {imageControls.size ? <a onClick={this.toggleSizeEditor}>&#xe3c2;</a> : null}\n              {imageControls.link ? <a className={link ? 'active' : ''} onClick={this.toggleLinkEditor}>&#xe91a;</a> : null}\n              {imageControls.remove ? <a onClick={this.removeImage}>&#xe9ac;</a> : null}\n              <i style={{marginLeft: toolbarOffset * -1}} className=\"braft-embed-image-toolbar-arrow\"></i>\n            </div>\n          ) : null}\n          <img\n            ref={instance => this.imageElement = instance}\n            src={url} style={{width, height}} width={width} height={height}\n          />\n        </div>\n        {clearFix && <div className=\"clearfix\" style={{clear:'both',height:0,lineHeight:0,float:'none'}}></div>}\n      </div>\n    )\n\n  }\n\n  calcToolbarOffset () {\n\n    let viewRect = null\n\n    if (this.props.viewWrapper) {\n      viewRect = document.querySelector(this.props.viewWrapper).getBoundingClientRect()\n    } else {\n      viewRect = document.body.getBoundingClientRect()\n    }\n\n    let toolbarRect = this.toolbarElement.getBoundingClientRect()\n    let imageRect = this.imageElement.getBoundingClientRect()\n    let right = imageRect.right - imageRect.width / 2 + toolbarRect.width / 2\n    let left = imageRect.left + imageRect.width / 2 - toolbarRect.width / 2\n\n    right = viewRect.right - right\n    left = left - viewRect.left\n\n    if (right < 10) {\n      return right - 10\n    } else if (left < 10) {\n      return left * -1 + 10\n    } else {\n      return 0\n    }\n\n  }\n\n  handleDragStart = (event) => {\n\n    window.__BRAFT_DRAGING__IMAGE__ = {\n      block: this.props.block,\n      mediaData: {\n        type: 'IMAGE',\n        ...this.props.mediaData\n      }\n    }\n\n    this.setState({\n      toolbarVisible: false\n    }, () => {\n      this.props.editor.setEditorProp('readOnly', false)\n    })\n\n    return true\n\n  }\n\n  handleDragEnd = (event) => {\n\n    window.__BRAFT_DRAGING__IMAGE__ = null\n    return false\n\n  }\n\n  removeImage = (e) => {\n    this.props.editor.removeBlock(this.props.block)\n    this.props.editor.setEditorProp('readOnly', false)\n  }\n\n  toggleLinkEditor = () => {\n    this.setState({\n      linkEditorVisible: !this.state.linkEditorVisible,\n      sizeEditorVisible: false\n    })\n  }\n\n  toggleSizeEditor = () => {\n    this.setState({\n      linkEditorVisible: false,\n      sizeEditorVisible: !this.state.sizeEditorVisible\n    })\n  }\n\n  handleLinkInputKeyDown = (e) => {\n\n    if (e.keyCode === 13) {\n      this.confirmImageLink()\n    } else {\n      return\n    }\n\n  }\n\n  setImageLink = (e) => {\n\n    this.setState({\n      tempLink: e.currentTarget.value\n    })\n\n    return\n\n  }\n\n  setImageLinkTarget (link_target) {\n\n    link_target = link_target === '_blank' ? '' : '_blank'\n    this.props.editor.setMediaData(this.props.entityKey, { link_target })\n    window.setImmediate(this.props.editor.forceRender)\n\n  }\n\n  confirmImageLink = () => {\n\n    const { tempLink: link } = this.state\n\n    if (link !== null) {\n      this.props.editor.setMediaData(this.props.entityKey, { link })\n      window.setImmediate(this.props.editor.forceRender)\n    }\n\n  }\n\n  handleSizeInputKeyDown = (e) => {\n\n    if (e.keyCode === 13) {\n      this.confirmImageSize()\n    } else {\n      return\n    }\n\n  }\n\n  setImageWidth = ({ currentTarget }) => {\n\n    let { value } = currentTarget\n\n    value && !isNaN(value) && (value = value + 'px')\n\n    this.setState({\n      tempWidth: value\n    })\n\n    return\n\n  }\n\n  setImageHeight = ({ currentTarget }) => {\n\n    let { value } = currentTarget\n\n    value && !isNaN(value) && (value = value + 'px')\n\n    this.setState({\n      tempHeight: value\n    })\n\n    return\n\n  }\n\n  confirmImageSize = () => {\n\n    const { tempWidth: width, tempHeight: height } = this.state\n    const newImageSize = {}\n\n    width !== null && (newImageSize.width = width);\n    height !== null && (newImageSize.height = height);\n\n    this.props.editor.setMediaData(this.props.entityKey, newImageSize)\n    window.setImmediate(this.props.editor.forceRender)\n\n  }\n\n  setImageFloat = (e) => {\n\n    const { float } = e.currentTarget.dataset\n    this.props.editor.setMediaPosition(this.props.block, { float })\n    this.props.editor.setEditorProp('readOnly', false)\n\n  }\n\n  setImageAlignment = (e) => {\n\n    const { alignment } = e.currentTarget.dataset\n    this.props.editor.setMediaPosition(this.props.block, { alignment })\n    this.props.editor.setEditorProp('readOnly', false)\n\n  }\n\n  showToolbar = (event) => {\n\n    event.preventDefault()\n\n    if (!this.state.toolbarVisible) {\n      this.setState({\n        toolbarVisible: true\n      }, () => {\n        this.props.editor.setEditorProp('readOnly', true)\n        this.setState({\n          toolbarOffset: this.calcToolbarOffset()\n        })\n      })\n    }\n\n  }\n\n  hideToolbar = (event) => {\n\n    event.preventDefault()\n\n    this.setState({\n      toolbarVisible: false\n    }, () => {\n      this.props.editor.setEditorProp('readOnly', false)\n    })\n\n  }\n\n}","module.exports = __WEBPACK_EXTERNAL_MODULE__31__;","import React from 'react'\nimport { Map } from 'immutable'\nimport { DefaultDraftBlockRenderMap } from 'draft-js'\nimport Image from './atomics/Image'\nimport Video from './atomics/Video'\nimport Audio from './atomics/Audio'\nimport Embed from './atomics/Embed'\nimport HorizontalLine from './atomics/HorizontalLine'\nimport _blockStyleFn from './styles/blockStyles'\nimport _getCustomStyleMap from './styles/inlineStyles'\nimport _decorators from './decorators'\n\nconst getAtomicBlockComponent = (block, superProps) => (props) => {\n\n  const entityKey = props.block.getEntityAt(0)\n\n  if (!entityKey) {\n    return null\n  }\n\n  const entity = props.contentState.getEntity(entityKey)\n  const mediaData = entity.getData()\n  const mediaType = entity.getType()\n  const mediaProps = {\n    ...superProps,\n    block, mediaData, entityKey\n  }\n\n  if (mediaType === 'IMAGE') {\n    return <Image { ...mediaProps } />\n  } else if (mediaType === 'AUDIO') {\n    return <Audio { ...mediaProps } />\n  } else if (mediaType === 'VIDEO') {\n    return <Video { ...mediaProps } />\n  } else if (mediaType === 'EMBED') {\n    return <Embed { ...mediaProps } />\n  } else if (mediaType === 'HR') {\n    return <HorizontalLine { ...mediaProps } />\n  }\n  // 支持自定义的atomic\n  if (superProps.extendAtomics) {\n    const atomics = superProps.extendAtomics;\n    for (let i = 0; i < atomics.length; i++) {\n      if (mediaType === atomics[i].type) {\n        const Component = atomics[i].component;\n        return <Component {...mediaProps} />\n      }\n    }\n  }\n\n  return null\n\n}\n\nexport const getBlockRendererFn = (props) => (block) => {\n\n  return block.getType() === 'atomic' ? {\n    component: getAtomicBlockComponent(block, props),\n    editable: false\n  } : null\n\n}\n\nexport const customBlockRenderMap = Map({\n  'atomic': {\n    element: ''\n  },\n  'code-block': {\n    element: 'code',\n    wrapper: DefaultDraftBlockRenderMap.get('code-block').wrapper\n  }\n})\nexport const blockStyleFn = _blockStyleFn\nexport const getCustomStyleMap = _getCustomStyleMap\nexport const decorators = _decorators","export default {\n  height: 500,\n  language: 'zh',\n  controls: [\n    'undo', 'redo', 'split', 'font-size', 'font-family', 'line-height', 'letter-spacing',\n    'indent','text-color', 'bold', 'italic', 'underline', 'strike-through',\n    'superscript', 'subscript', 'remove-styles', 'emoji', 'text-align', 'split', 'headings', 'list_ul',\n    'list_ol', 'blockquote', 'code', 'split', 'link', 'split', 'hr', 'split', 'media', 'split', 'clear'\n  ],\n  excludeControls: [],\n  tabIndents: 2,\n  forceNewLine: false,\n  textAlignOptions: ['left', 'center', 'right', 'justify'],\n  allowSetTextBackgroundColor: true,\n  letterSpacings: [0, 2, 4, 6],\n  indents: [0, 14, 21, 28],\n  extendControls: [],\n  media: {\n    allowPasteImage: true,\n    image: true,\n    video: true,\n    audio: true,\n    uploadFn: null,\n    sourceFn: null,\n    onRemove: null,\n    onChange: null,\n    onInsert: null,\n    externalMedias: {\n      audio: true,\n      video: true,\n      image: true,\n      embed: true\n    }\n  },\n  imageControls: {\n    floatLeft: true,\n    floatRight: true,\n    alignLeft: true,\n    alignCenter: true,\n    alignRight: true,\n    link: true,\n    size: true,\n    remove: true\n  },\n  colors: [\n    '#000000', '#333333', '#666666', '#999999', '#cccccc', '#ffffff',\n    '#61a951', '#16a085', '#07a9fe', '#003ba5', '#8e44ad', '#f32784',\n    '#c0392b', '#d35400', '#f39c12', '#fdda00', '#7f8c8d', '#2c3e50'\n  ],\n  lineHeights: [\n    '1', '1.2', '1.5', '1.75', '2', '2.5', '3', '4'\n  ],\n  fontSizes: [\n    12, 14, 16, 18, 20, 24,\n    28, 30, 32, 36, 40, 48,\n    56, 64, 72, 96, 120, 144\n  ],\n  fontFamilies: [{\n    name: 'Araial',\n    family: 'Arial, Helvetica, sans-serif'\n  }, {\n    name: 'Georgia',\n    family: 'Georgia, serif'\n  }, {\n    name: 'Impact',\n    family: 'Impact, serif'\n  }, {\n    name: 'Monospace',\n    family: '\"Courier New\", Courier, monospace'\n  }, {\n    name: 'Tahoma',\n    family: \"tahoma, arial, 'Hiragino Sans GB', 宋体, sans-serif\"\n  }],\n  emojis: [\n    \"🤣\", \"🙌\", \"💚\", \"💛\", \"👏\", \"😉\", \"💯\",\n    \"💕\", \"💞\", \"💘\", \"💙\", \"💝\", \"🖤\", \"💜\",\n    \"❤️\", \"😍\", \"😻\", \"💓\", \"💗\", \"😋\", \"😇\",\n    \"😂\", \"😹\", \"😘\", \"💖\", \"😁\", \"😀\", \"🤞\",\n    \"😲\", \"😄\", \"😊\", \"👍\", \"😌\", \"😃\", \"😅\",\n    \"✌️\", \"🤗\", \"💋\", \"😗\", \"😽\", \"😚\", \"🤠\",\n    \"😙\", \"😺\", \"👄\", \"😸\", \"😏\", \"😼\", \"👌\",\n    \"😎\", \"😆\", \"😛\", \"🙏\", \"🤝\", \"🙂\", \"🤑\",\n    \"😝\", \"😐\", \"😑\", \"🤤\", \"😤\", \"🙃\", \"🤡\",\n    \"😶\", \"😪\", \"😴\", \"😵\", \"😓\", \"👊\", \"😦\",\n    \"😷\", \"🤐\", \"😜\", \"🤓\", \"👻\", \"😥\", \"🙄\",\n    \"🤔\", \"🤒\", \"🙁\", \"😔\", \"😯\", \"☹️\", \"☠️\",\n    \"😰\", \"😩\", \"😖\", \"😕\", \"😒\", \"😣\", \"😢\",\n    \"😮\", \"😿\", \"🤧\", \"😫\", \"🤥\", \"😞\", \"😬\",\n    \"👎\", \"💀\", \"😳\", \"😨\", \"🤕\", \"🤢\", \"😱\",\n    \"😭\", \"😠\", \"😈\", \"😧\", \"💔\", \"😟\", \"🙀\",\n    \"💩\", \"👿\", \"😡\", \"😾\", \"🖕\"\n  ],\n  extendAtomics: [],\n  draftProps: {},\n  onChange: null,\n  onFocus: null,\n  onBlur: null,\n  onSave: null\n}","import { getDefaultKeyBinding, KeyBindingUtil } from 'draft-js'\n\n// TODO\n// 允许自定义的快捷键设置\n\nexport default (event) => {\n\n  if (event.keyCode === 83 && (KeyBindingUtil.hasCommandModifier(event) || KeyBindingUtil.isCtrlKeyCommand(event))) {\n    return 'braft-save'\n  }\n\n  return getDefaultKeyBinding(event);\n\n}\n","module.exports = __WEBPACK_EXTERNAL_MODULE__35__;","export default {\n  base: {\n    remove: '刪除',\n    cancel: '取消',\n    confirm: '確定',\n    inert: '插入',\n    width: '宽度',\n    height: '高度'\n  },\n  controls: {\n    clear: '清除内容',\n    undo: '撤銷',\n    redo: '重做',\n    fontSize: '字號',\n    color: '顏色',\n    textColor: '文字顏色',\n    backgroundColor: '背景顏色',\n    tempColors: '臨時顏色',\n    bold: '加粗',\n    lineHeight: '行高',\n    letterSpacing: '字間距',\n    indent: '兩端縮進',\n    border: '邊框',\n    italic: '斜體',\n    underline: '下劃線',\n    strikeThrough: '刪除線',\n    fontFamily: '字體',\n    textAlign: '文本對齊',\n    alignLeft: '居左',\n    alignCenter: '居中',\n    alignRight: '居右',\n    alignJustify: '兩端對齊',\n    floatLeft: '左浮動',\n    floatRight: '右浮動',\n    superScript: '上標',\n    subScript: '下標',\n    removeStyles: '清除样式',\n    headings: '標題',\n    header: '標題',\n    normal: '常規',\n    orderedList: '有序列表',\n    unorderedList: '無序列表',\n    blockQuote: '引用',\n    code: '代碼',\n    link: '鏈接',\n    unlink: '清除鏈接',\n    hr: '水平线',\n    media: '媒體',\n    emoji: '小表情'\n  },\n  linkEditor: {\n    inputPlaceHolder: '輸入鏈接地址',\n    inputWithEnterPlaceHolder: '輸入鏈接地址並回車',\n    openInNewWindow: '在新窗口打開',\n    removeLink: '移除鏈接'\n  },\n  audioPlayer: {\n    title: '播放音頻文件'\n  },\n  videoPlayer: {\n    title: '播放視頻文件',\n    embedTitle: '嵌入式媒體'\n  },\n  media: {\n    image: '圖像',\n    video: '視頻',\n    audio: '音頻',\n    embed: '嵌入式媒體'\n  }\n}","export default {\n  base: {\n    remove: '删除',\n    cancel: '取消',\n    confirm: '确定',\n    inert: '插入',\n    width: '宽度',\n    height: '高度'\n  },\n  controls: {\n    clear: '清除内容',\n    undo: '撤销',\n    redo: '重做',\n    fontSize: '字号',\n    lineHeight: '行高',\n    letterSpacing: '字间距',\n    indent: '两端缩进',\n    border: '边框',\n    color: '颜色',\n    textColor: '文字颜色',\n    backgroundColor: '背景颜色',\n    tempColors: '临时颜色',\n    bold: '加粗',\n    italic: '斜体',\n    underline: '下划线',\n    strikeThrough: '删除线',\n    fontFamily: '字体',\n    textAlign: '文本对齐',\n    alignLeft: '居左',\n    alignCenter: '居中',\n    alignRight: '居右',\n    alignJustify: '两端',\n    floatLeft: '左浮动',\n    floatRight: '右浮动',\n    superScript: '上标',\n    subScript: '下标',\n    removeStyles: '清除样式',\n    headings: '标题',\n    header: '标题',\n    normal: '常规',\n    orderedList: '有序列表',\n    unorderedList: '无序列表',\n    blockQuote: '引用',\n    code: '代码',\n    link: '链接',\n    unlink: '清除链接',\n    hr: '水平线',\n    media: '媒体',\n    emoji: '小表情'\n  },\n  linkEditor: {\n    inputPlaceHolder: '输入链接地址',\n    inputWithEnterPlaceHolder: '输入链接地址并回车',\n    openInNewWindow: '在新窗口打开',\n    removeLink: '移除链接'\n  },\n  audioPlayer: {\n    title: '播放音频文件'\n  },\n  videoPlayer: {\n    title: '播放视频文件',\n    embedTitle: '嵌入式媒体'\n  },\n  media: {\n    image: '图像',\n    video: '视频',\n    audio: '音频',\n    embed: '嵌入式媒体'\n  }\n}","export default {\n  base: {\n    remove: 'Remove',\n    cancel: 'Cancel',\n    confirm: 'Confirm',\n    inert: 'Insert',\n    width: 'Width',\n    height: 'Height'\n  },\n  controls: {\n    clear: 'Clear',\n    undo: 'Undo',\n    redo: 'Redo',\n    fontSize: 'Font Size',\n    color: 'Color',\n    textColor: 'Text',\n    tempColors: 'Temp Colors',\n    backgroundColor: 'Background',\n    bold: 'Bold',\n    lineHeight:'Line Height',\n    letterSpacing:'Letter Spacing',\n    indent:'Indent at both ends',\n    italic: 'Italic',\n    underline: 'Underline',\n    strikeThrough: 'Strike Through',\n    fontFamily: 'Font Family',\n    textAlign: 'Text Alignment',\n    alignLeft: 'Left Alignment',\n    alignCenter: 'Center Alignment',\n    alignRight: 'Right Alignment',\n    alignJustify: 'Justify Alignment',\n    floatLeft: 'Left Float',\n    floatRight: 'Right Float',\n    superScript: 'Super Script',\n    subScript: 'Sub Script',\n    removeStyles: 'Remove Styles',\n    headings: 'Headings',\n    header: 'Header',\n    normal: 'Normal',\n    orderedList: 'Ordered List',\n    unorderedList: 'Unordered List',\n    blockQuote: 'Quote',\n    code: 'Code',\n    link: 'Link',\n    unlink: 'Unlink',\n    hr: 'Horizontal Line',\n    media: 'Media',\n    emoji: 'Emoji'\n  },\n  linkEditor: {\n    inputPlaceHolder: 'Input link URL',\n    inputWithEnterPlaceHolder: 'Input link URL and press Enter',\n    openInNewWindow: 'Open in new window',\n    removeLink: 'Remove Link'\n  },\n  audioPlayer: {\n    title: 'Play Audio'\n  },\n  videoPlayer: {\n    title: 'Play Video',\n    embedTitle: 'Embed Media'\n  },\n  media: {\n    image: 'Image',\n    video: 'Video',\n    audio: 'Audio',\n    embed: 'Embed'\n  }\n}","import en from './en'\nimport zh from './zh'\nimport zhHant from './zh-hant'\n\nexport default {\n  \"en\": en,\n  \"zh\": zh,\n  \"zh-hant\": zhHant\n}","import 'draft-js/dist/Draft.css'\nimport 'assets/scss/_base.scss'\nimport React from 'react'\nimport languages from 'languages'\nimport { CompositeDecorator, DefaultDraftBlockRenderMap, Editor, ContentState, EditorState, RichUtils } from 'draft-js'\nimport { handleNewLine } from 'draftjs-utils'\nimport keyBindingFn from 'configs/keybindings'\nimport defaultProps from 'configs/props'\nimport { getBlockRendererFn, customBlockRenderMap, blockStyleFn, getCustomStyleMap, decorators } from 'renderers'\nimport ControlBar from 'components/business/ControlBar'\nimport { BaseUtils, ColorUtils, ContentUtils } from 'braft-utils'\n\nconst editorDecorators = new CompositeDecorator(decorators)\nconst blockRenderMap = DefaultDraftBlockRenderMap.merge(customBlockRenderMap)\n\nexport default class BraftEditor extends React.Component {\n\n  static defaultProps = defaultProps\n\n  constructor (props) {\n\n    super(props)\n\n    this.isFocused = false\n    this.editorIndex = BaseUtils.UniqueIndex()\n    this.state = {\n      tempColors: [],\n      editorState: EditorState.createEmpty(editorDecorators),\n    }\n\n  }\n\n  onChange = (editorState) => {\n    this.setState({ editorState }, () => {\n      this.props.onChange && this.props.onChange(editorState)\n    })\n  }\n\n  getDraftInstance = () => {\n    return this.draftInstance\n  }\n\n  getFinderInstance = () => {\n    return this.braftFinder\n  }\n\n  getValue = () => {\n    return this.state.editorState\n  }\n\n  setValue = (editorState) => {\n    return this.onChange(editorState)\n  }\n\n  forceRender = () => {\n    return this.setValue(EditorState.createWithContent(this.state.editorState.getCurrentContent(), editorDecorators))\n  }\n\n  onTab = (event) => {\n\n    if (ContentUtils.getSelectionBlockType(this.state.editorState) === 'code-block') {\n      this.insertText(' '.repeat(this.props.tabIndents), false)\n      event.preventDefault()\n      return false\n    }\n\n    this.props.onTab && this.props.onTab(event)\n\n  }\n\n  onFocus = () => {\n    this.isFocused = true\n    this.props.onFocus && this.props.onFocus()\n  }\n\n  onBlur = () => {\n    this.isFocused = false\n    this.props.onBlur && this.props.onBlur()\n  }\n\n  requestFocus = () => {\n    setTimeout(() => this.draftInstance.focus(), 0)\n  }\n\n  handleKeyCommand = (command) => {\n\n    if (command === 'braft-save') {\n      this.props.onSave && this.props.onSave()\n      return 'handled'\n    }\n\n    const nextEditorState = ContentUtils.handleKeyCommand(this.state.editorState, command)\n\n    if (nextEditorState) {\n      this.setValue(nextEditorState)\n      return 'handled'\n    }\n\n    return 'not-handled'\n\n  }\n\n  handleReturn = (event) => {\n\n    const currentBlock = ContentUtils.getSelectionBlock(this.state.editorState)\n    const currentBlockType = currentBlock.getType()\n\n    if (currentBlockType === 'unordered-list-item' || currentBlockType === 'ordered-list-item') {\n\n      if (currentBlock.getLength() === 0) {\n        this.setValue(ContentUtils.toggleSelectionBlockType(this.state.editorState, 'unstyled'))\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    } else if (currentBlockType === 'code-block') {\n\n      if (\n        event.which === 13 && (\n          event.getModifierState('Shift') ||\n          event.getModifierState('Alt') ||\n          event.getModifierState('Control')\n        )) {\n        this.setValue(ContentUtils.toggleSelectionBlockType(this.state.editorState, 'unstyled'))\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    } else {\n\n      if (this.props.forceNewLine) {\n        event.which = 13\n        event.getModifierState = () => true\n      }\n\n      const nextEditorState = handleNewLine(this.state.editorState, event)\n\n      if (nextEditorState) {\n        this.setValue(nextEditorState)\n        return 'handled'\n      }\n\n      return 'not-handled'\n\n    }\n\n    return false\n\n  }\n\n  handleDrop = (selectionState, dataTransfer, isInternal) => {\n\n    if (window && window.__BRAFT_DRAGING__IMAGE__) {\n\n      let editorState = ContentUtils.removeBlock(this.state.editorState, window.__BRAFT_DRAGING__IMAGE__.block, selectionState)\n      editorState = ContentUtils.insertMedias(editorState, [window.__BRAFT_DRAGING__IMAGE__.mediaData])\n\n      window.__BRAFT_DRAGING__IMAGE__ = null\n\n      this.setEditorProp('readOnly', false)\n      this.setValue(editorState)\n\n      return 'handled'\n\n    } else if (!dataTransfer || !dataTransfer.getText()) {\n      return 'handled'\n    }\n\n    return 'not-handled'\n\n  }\n\n  handleDroppedFiles = (selectionState, files) => {\n    return this.resolveFiles(files)\n  }\n\n  handlePastedFiles = (files) => {\n    return this.resolveFiles(files)\n  }\n\n  handlePastedText = (text, htmlString) => {\n\n    if (!htmlString) {\n      return false\n    }\n\n    const pasteMode = this.tmpPasteMode || this.props.pasteMode || 'normal'\n\n    if (pasteMode === 'text') {\n      this.tmpPasteMode = 'normal'\n      const tmpTextHolder = document.createElement('div')\n      tmpTextHolder.innerHTML = htmlString\n      return this.handlePastedText(text, tmpTextHolder.textContent || tmpTextHolder.innerText || '')\n    } else {\n      this.tmpPasteMode = null\n    }\n\n    const tempColors = ColorUtils.detectColorsFromHTMLString(htmlString)\n\n    this.setState({\n      tempColors: [...this.state.tempColors, ...tempColors].filter(item => this.props.colors.indexOf(item) === -1).filter((item, index, array) => array.indexOf(item) === index)\n    }, () => {\n      this.setValue(ContentUtils.insertHTML(this.state.editorState, htmlString))\n    })\n\n    return true\n\n  }\n\n  resolveFiles = (files) => {\n\n    if (files[0] && files[0].type.indexOf('image') > -1 && this.props.media && this.props.media.allowPasteImage !== false) {\n\n      this.braftFinder.uploadImage(files[0], image => {\n        this.setValue(ContentUtils.insertMedias(this.state.editorState, [image]))\n      })\n  \n      return 'handled'\n\n    }\n\n    return 'not-handled'\n\n  }\n\n  undo = () => {\n    this.setValue(EditorState.undo(this.state.editorState))\n  }\n\n  redo = () => {\n    this.setValue(EditorState.redo(this.state.editorState))\n  }\n\n  render () {\n\n    let {\n      controls, excludeControls, extendControls, disabled, height, media, language, colors,\n      fontSizes, fontFamilies, emojis, viewWrapper, placeholder, imageControls, lineHeights, letterSpacings, indents, textAlignOptions, allowSetTextBackgroundColor,\n      extendAtomics\n    } = this.props\n\n    controls = controls.filter(item => excludeControls.indexOf(item) === -1)\n    language = languages[language] || languages[defaultOptions.language]\n\n    const externalMedias = media && media.externalMedias ? {\n      ...defaultOptions.media.externalMedias,\n      ...media.externalMedias\n    } : defaultOptions.media.externalMedias\n\n    media = { ...defaultOptions.media, ...media, externalMedias }\n\n    imageControls = imageControls ? {\n      ...defaultOptions.imageControls,\n      ...imageControls\n    } : defaultOptions.imageControls\n\n    viewWrapper = viewWrapper || `.BraftEditor-instance-${this.editorIndex}`\n\n    if (!media.uploadFn) {\n      media.video = false\n      media.audio = false\n    }\n\n    const controlBarProps = {\n      editor: this,\n      editorState: this.state.editorState,\n      editorHeight: height,\n      ref: instance => this.controlBarInstance = instance,\n      colors: [...colors, ...this.state.tempColors],\n      media, controls, language, viewWrapper, extendControls, fontSizes, fontFamilies,\n      emojis, lineHeights, letterSpacings, indents, textAlignOptions, allowSetTextBackgroundColor\n    }\n\n    const blockRendererFn = getBlockRendererFn({\n      editor: this, imageControls,\n      language, viewWrapper,\n      extendAtomics\n    })\n\n    const customStyleMap = getCustomStyleMap({\n      colors: [...colors, ...this.state.tempColors],\n      fontSizes, fontFamilies, lineHeights, letterSpacings, indents\n    })\n\n    const draftProps = {\n      ref: instance => { this.draftInstance = instance },\n      editorState: this.state.editorState,\n      handleKeyCommand: this.handleKeyCommand,\n      handleReturn: this.handleReturn,\n      handleDrop: this.handleDrop,\n      handleDroppedFiles: this.handleDroppedFiles,\n      handlePastedText: this.handlePastedText,\n      handlePastedFiles: this.handlePastedFiles,\n      onChange: this.onChange,\n      onTab: this.onTab,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      readOnly: disabled,\n      customStyleMap, blockStyleFn, keyBindingFn,\n      blockRendererFn, blockRenderMap, placeholder,\n      ...this.props.draftProps\n    }\n\n    return (\n      <div className={`BraftEditor-container BraftEditor-instance-${this.editorIndex} ${(disabled ? 'disabled' : '')}`}>\n        <ControlBar {...controlBarProps} />\n        <div className=\"BraftEditor-content\" style={height ? { height } : {}}>\n          <Editor {...draftProps} />\n        </div>\n      </div>\n    )\n\n  }\n\n}","import BraftEditor from 'editor'\n\nexport default BraftEditor"],"sourceRoot":""}